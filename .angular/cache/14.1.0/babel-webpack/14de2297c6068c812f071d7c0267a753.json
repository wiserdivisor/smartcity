{"ast":null,"code":"/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { get as getProjection } from '../proj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\n\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\n\nvar DragAndDropEvent =\n/** @class */\nfunction (_super) {\n  __extends(DragAndDropEvent, _super);\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n\n\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n\n\n    _this.features = opt_features;\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n\n    _this.file = file;\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n\n    _this.projection = opt_projection;\n    return _this;\n  }\n\n  return DragAndDropEvent;\n}(Event);\n\nexport { DragAndDropEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combination of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\n\nvar DragAndDrop =\n/** @class */\nfunction (_super) {\n  __extends(DragAndDrop, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function DragAndDrop(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      handleEvent: TRUE\n    }) || this;\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.readAsBuffer_ = false;\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n\n    _this.formats_ = [];\n    var formatConstructors = options.formatConstructors ? options.formatConstructors : [];\n\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = formatConstructors[i];\n\n      if (typeof format === 'function') {\n        format = new format();\n      }\n\n      _this.formats_.push(format);\n\n      _this.readAsBuffer_ = _this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n\n\n    _this.projection_ = options.projection ? getProjection(options.projection) : null;\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n\n    _this.dropListenKeys_ = null;\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n\n    _this.source_ = options.source || null;\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n\n    _this.target = options.target ? options.target : null;\n    return _this;\n  }\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n\n\n  DragAndDrop.prototype.handleResult_ = function (file, event) {\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var text;\n    var formats = this.formats_;\n\n    for (var i = 0, ii = formats.length; i < ii; ++i) {\n      var format = formats[i];\n      var input = result;\n\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n\n        input = text;\n      }\n\n      var features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection\n      });\n\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n        break;\n      }\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  DragAndDrop.prototype.registerListeners_ = function () {\n    var map = this.getMap();\n\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [listen(dropArea, EventType.DROP, this.handleDrop, this), listen(dropArea, EventType.DRAGENTER, this.handleStop, this), listen(dropArea, EventType.DRAGOVER, this.handleStop, this), listen(dropArea, EventType.DROP, this.handleStop, this)];\n    }\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n\n\n  DragAndDrop.prototype.setActive = function (active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n\n    _super.prototype.setActive.call(this, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  DragAndDrop.prototype.setMap = function (map) {\n    this.unregisterListeners_();\n\n    _super.prototype.setMap.call(this, map);\n\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        format.readFeatures(text, options)\n      );\n    } catch (e) {\n      return null;\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  DragAndDrop.prototype.unregisterListeners_ = function () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n  /**\n   * @param {DragEvent} event Event.\n   */\n\n\n  DragAndDrop.prototype.handleDrop = function (event) {\n    var files = event.dataTransfer.files;\n\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n      var file = files.item(i);\n      var reader = new FileReader();\n      reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  };\n  /**\n   * @param {DragEvent} event Event.\n   */\n\n\n  DragAndDrop.prototype.handleStop = function (event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  return DragAndDrop;\n}(Interaction);\n\nexport default DragAndDrop;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Event","EventType","Interaction","TRUE","get","getProjection","listen","unlistenByKey","DragAndDropEventType","ADD_FEATURES","DragAndDropEvent","_super","type","file","opt_features","opt_projection","_this","features","projection","DragAndDrop","opt_options","options","handleEvent","on","once","un","readAsBuffer_","formats_","formatConstructors","i","ii","length","format","push","getType","projection_","dropListenKeys_","source_","source","target","handleResult_","event","result","map","getMap","view","getView","text","formats","input","undefined","TextDecoder","decode","tryReadFeatures_","featureProjection","clear","addFeatures","dispatchEvent","registerListeners_","dropArea","getViewport","DROP","handleDrop","DRAGENTER","handleStop","DRAGOVER","setActive","active","getActive","unregisterListeners_","setMap","readFeatures","e","forEach","files","dataTransfer","item","reader","FileReader","addEventListener","LOAD","bind","readAsArrayBuffer","readAsText","stopPropagation","preventDefault","dropEffect"],"sources":["/home/asura/github/smartcity/node_modules/ol/interaction/DragAndDrop.js"],"sourcesContent":["/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { get as getProjection } from '../proj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\nexport { DragAndDropEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combination of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE,\n        }) || this;\n        /***\n         * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {DragAndDropOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.readAsBuffer_ = false;\n        /**\n         * @private\n         * @type {Array<import(\"../format/Feature.js\").default>}\n         */\n        _this.formats_ = [];\n        var formatConstructors = options.formatConstructors\n            ? options.formatConstructors\n            : [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = formatConstructors[i];\n            if (typeof format === 'function') {\n                format = new format();\n            }\n            _this.formats_.push(format);\n            _this.readAsBuffer_ =\n                _this.readAsBuffer_ || format.getType() === 'arraybuffer';\n        }\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection\n            ? getProjection(options.projection)\n            : null;\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement|null}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var text;\n        var formats = this.formats_;\n        for (var i = 0, ii = formats.length; i < ii; ++i) {\n            var format = formats[i];\n            var input = result;\n            if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n                if (text === undefined) {\n                    text = new TextDecoder().decode(result);\n                }\n                input = text;\n            }\n            var features = this.tryReadFeatures_(format, input, {\n                featureProjection: projection,\n            });\n            if (features && features.length > 0) {\n                if (this.source_) {\n                    this.source_.clear();\n                    this.source_.addFeatures(features);\n                }\n                this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n                break;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, this.handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n                listen(dropArea, EventType.DROP, this.handleStop, this),\n            ];\n        }\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        if (!this.getActive() && active) {\n            this.registerListeners_();\n        }\n        if (this.getActive() && !active) {\n            this.unregisterListeners_();\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return (\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            (format.readFeatures(text, options)));\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleDrop = function (event) {\n        var files = event.dataTransfer.files;\n        for (var i = 0, ii = files.length; i < ii; ++i) {\n            var file = files.item(i);\n            var reader = new FileReader();\n            reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n            if (this.readAsBuffer_) {\n                reader.readAsArrayBuffer(file);\n            }\n            else {\n                reader.readAsText(file);\n            }\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleStop = function (event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n    };\n    return DragAndDrop;\n}(Interaction));\nexport default DragAndDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}