{"ast":null,"code":"/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\n\nvar CanvasImmediateRenderer =\n/** @class */\nfunction (_super) {\n  __extends(CanvasImmediateRenderer, _super);\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n\n\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n\n    _this.context_ = context;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    _this.extent_ = extent;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    _this.transform_ = transform;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.viewRotation_ = viewRotation;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.squaredTolerance_ = opt_squaredTolerance;\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n\n    _this.userTransform_ = opt_userTransform;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    _this.contextFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    _this.contextStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n\n    _this.contextTextState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    _this.fillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    _this.strokeState_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n\n    _this.image_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageAnchorX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageAnchorY_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageHeight_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageOpacity_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageOriginX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageOriginY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.imageRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageRotation_ = 0;\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n\n    _this.imageScale_ = [0, 0];\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.imageWidth_ = 0;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.textRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n\n    _this.textScale_ = [0, 0];\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    _this.textFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    _this.textStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n\n    _this.textState_ = null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.pixelCoordinates_ = [];\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    _this.tmpLocalTransform_ = createTransform();\n    return _this;\n  }\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n\n    var rotation = this.imageRotation_;\n\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n\n      if (rotation !== 0 || this.imageScale_[0] != 1 || this.imageScale_[1] != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n      }\n    }\n\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n\n      if (rotation !== 0 || this.textScale_[0] != 1 || this.textScale_[1] != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n\n\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n\n    if (close) {\n      length -= 2;\n    }\n\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n\n    if (close) {\n      context.closePath();\n    }\n\n    return end;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n\n    return offset;\n  };\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n\n      var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n\n      if (this.fillState_) {\n        context.fill();\n      }\n\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.setStyle = function (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n\n\n  CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n    this.transform_ = transform;\n  };\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n    var type = geometry.getType();\n\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n        /** @type {import(\"../../geom/Point.js\").default} */\n        geometry);\n        break;\n\n      case 'LineString':\n        this.drawLineString(\n        /** @type {import(\"../../geom/LineString.js\").default} */\n        geometry);\n        break;\n\n      case 'Polygon':\n        this.drawPolygon(\n        /** @type {import(\"../../geom/Polygon.js\").default} */\n        geometry);\n        break;\n\n      case 'MultiPoint':\n        this.drawMultiPoint(\n        /** @type {import(\"../../geom/MultiPoint.js\").default} */\n        geometry);\n        break;\n\n      case 'MultiLineString':\n        this.drawMultiLineString(\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */\n        geometry);\n        break;\n\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry);\n        break;\n\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n        /** @type {import(\"../../geom/GeometryCollection.js\").default} */\n        geometry);\n        break;\n\n      case 'Circle':\n        this.drawCircle(\n        /** @type {import(\"../../geom/Circle.js\").default} */\n        geometry);\n        break;\n\n      default:\n    }\n  };\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n    var geometries = geometry.getGeometriesArray();\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n      /** @type {import(\"../../geom/Point.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n      /** @type {import(\"../../geom/MultiPoint.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n      /** @type {import(\"../../geom/LineString.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n      context.stroke();\n    }\n\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n      /** @type {import(\"../../geom/MultiLineString.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n\n    var geometryExtent = geometry.getExtent();\n\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends =\n      /** @type {Array<number>} */\n      geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n\n      context.stroke();\n    }\n\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n      /** @type {import(\"../../geom/Polygon.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(), 0,\n      /** @type {Array<number>} */\n      geometry.getEnds(), geometry.getStride());\n\n      if (this.fillState_) {\n        context.fill();\n      }\n\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n      /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n\n      if (this.fillState_) {\n        context.fill();\n      }\n\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ? textState.textAlign : defaultTextAlign;\n\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign =\n      /** @type {CanvasTextAlign} */\n      textAlign;\n      context.textBaseline =\n      /** @type {CanvasTextBaseline} */\n      textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign =\n        /** @type {CanvasTextAlign} */\n        textAlign;\n        context.textAlign =\n        /** @type {CanvasTextAlign} */\n        textAlign;\n      }\n\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline =\n        /** @type {CanvasTextBaseline} */\n        textState.textBaseline;\n        context.textBaseline =\n        /** @type {CanvasTextBaseline} */\n        textState.textBaseline;\n      }\n    }\n  };\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n\n\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n    var _this = this;\n\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle)\n      };\n    }\n\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      var lineDash = strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash;\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap,\n        lineDash: this.pixelRatio_ === 1 ? lineDash : lineDash.map(function (n) {\n          return n * _this.pixelRatio_;\n        }),\n        lineDashOffset: (strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: (strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth) * this.pixelRatio_,\n        miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n\n\n  CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n    var imageSize;\n\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n\n    var imageAnchor = imageStyle.getAnchor();\n    var imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  };\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n\n\n  CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle)\n        };\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScaleArray();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ? textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? Array.isArray(textText) ? textText.reduce(function (acc, t, i) {\n        return acc += i % 2 ? ' ' : t;\n      }, '') : textText : '';\n      this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [this.pixelRatio_ * textScale[0], this.pixelRatio_ * textScale[1]];\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext);\n\nexport default CanvasImmediateRenderer;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","VectorContext","asColorLike","compose","composeTransform","createTransform","defaultFillStyle","defaultFont","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","equals","intersects","transform2D","transformGeom2D","CanvasImmediateRenderer","_super","context","pixelRatio","extent","transform","viewRotation","opt_squaredTolerance","opt_userTransform","_this","context_","pixelRatio_","extent_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","flatCoordinates","offset","end","stride","pixelCoordinates","localTransform","alpha","globalAlpha","rotation","i","ii","length","x","y","centerX","centerY","setTransform","apply","translate","scale","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","ends","drawCircle","geometry","getExtent","dx","dy","radius","Math","sqrt","beginPath","arc","PI","fill","stroke","getCenter","setStyle","style","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","drawGeometry","type","getType","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawFeature","feature","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","getFlatCoordinates","getStride","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","fillStyle","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","textState","contextTextState","textAlign","font","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","undefined","map","n","imageStyle","imageSize","getSize","imageAnchor","getAnchor","imageOrigin","getOrigin","getOpacity","getRotateWithView","getRotation","getScaleArray","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","isArray","reduce","acc","t"],"sources":["/home/asura/github/smartcity/node_modules/ol/render/canvas/Immediate.js"],"sourcesContent":["/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case 'Point':\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case 'LineString':\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case 'Polygon':\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case 'MultiPoint':\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case 'MultiLineString':\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case 'MultiPolygon':\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case 'GeometryCollection':\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case 'Circle':\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;MAAEC,SAAS,EAAE;IAAb,aAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;MAAED,CAAC,CAACI,SAAF,GAAcH,CAAd;IAAkB,CAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;MAAE,KAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IAAc,CAFrG;;IAGA,OAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;EACH,CALD;;EAMA,OAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;IACnB,IAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;IACJF,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;IACA,SAASW,EAAT,GAAc;MAAE,KAAKC,WAAL,GAAmBb,CAAnB;IAAuB;;IACvCA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;EACH,CAND;AAOH,CAd2C,EAA5C;;AAeA,OAAOG,aAAP,MAA0B,qBAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,OAAO,IAAIC,gBAApB,EAAsCJ,MAAM,IAAIK,eAAhD,QAAwE,oBAAxE;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,qBAAzE,EAAgGC,eAAhG,EAAiHC,gBAAjH,EAAmIC,iBAAnI,EAAsJC,kBAAtJ,EAA0KC,gBAA1K,EAA4LC,mBAA5L,QAAwN,cAAxN;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC3DtC,SAAS,CAACqC,uBAAD,EAA0BC,MAA1B,CAAT;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI,SAASD,uBAAT,CAAiCE,OAAjC,EAA0CC,UAA1C,EAAsDC,MAAtD,EAA8DC,SAA9D,EAAyEC,YAAzE,EAAuFC,oBAAvF,EAA6GC,iBAA7G,EAAgI;IAC5H,IAAIC,KAAK,GAAGR,MAAM,CAAC3B,IAAP,CAAY,IAAZ,KAAqB,IAAjC;IACA;AACR;AACA;AACA;;;IACQmC,KAAK,CAACC,QAAN,GAAiBR,OAAjB;IACA;AACR;AACA;AACA;;IACQO,KAAK,CAACE,WAAN,GAAoBR,UAApB;IACA;AACR;AACA;AACA;;IACQM,KAAK,CAACG,OAAN,GAAgBR,MAAhB;IACA;AACR;AACA;AACA;;IACQK,KAAK,CAACI,UAAN,GAAmBR,SAAnB;IACA;AACR;AACA;AACA;;IACQI,KAAK,CAACK,aAAN,GAAsBR,YAAtB;IACA;AACR;AACA;AACA;;IACQG,KAAK,CAACM,iBAAN,GAA0BR,oBAA1B;IACA;AACR;AACA;AACA;;IACQE,KAAK,CAACO,cAAN,GAAuBR,iBAAvB;IACA;AACR;AACA;AACA;;IACQC,KAAK,CAACQ,iBAAN,GAA0B,IAA1B;IACA;AACR;AACA;AACA;;IACQR,KAAK,CAACS,mBAAN,GAA4B,IAA5B;IACA;AACR;AACA;AACA;;IACQT,KAAK,CAACU,iBAAN,GAA0B,IAA1B;IACA;AACR;AACA;AACA;;IACQV,KAAK,CAACW,UAAN,GAAmB,IAAnB;IACA;AACR;AACA;AACA;;IACQX,KAAK,CAACY,YAAN,GAAqB,IAArB;IACA;AACR;AACA;AACA;;IACQZ,KAAK,CAACa,MAAN,GAAe,IAAf;IACA;AACR;AACA;AACA;;IACQb,KAAK,CAACc,aAAN,GAAsB,CAAtB;IACA;AACR;AACA;AACA;;IACQd,KAAK,CAACe,aAAN,GAAsB,CAAtB;IACA;AACR;AACA;AACA;;IACQf,KAAK,CAACgB,YAAN,GAAqB,CAArB;IACA;AACR;AACA;AACA;;IACQhB,KAAK,CAACiB,aAAN,GAAsB,CAAtB;IACA;AACR;AACA;AACA;;IACQjB,KAAK,CAACkB,aAAN,GAAsB,CAAtB;IACA;AACR;AACA;AACA;;IACQlB,KAAK,CAACmB,aAAN,GAAsB,CAAtB;IACA;AACR;AACA;AACA;;IACQnB,KAAK,CAACoB,oBAAN,GAA6B,KAA7B;IACA;AACR;AACA;AACA;;IACQpB,KAAK,CAACqB,cAAN,GAAuB,CAAvB;IACA;AACR;AACA;AACA;;IACQrB,KAAK,CAACsB,WAAN,GAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB;IACA;AACR;AACA;AACA;;IACQtB,KAAK,CAACuB,WAAN,GAAoB,CAApB;IACA;AACR;AACA;AACA;;IACQvB,KAAK,CAACwB,KAAN,GAAc,EAAd;IACA;AACR;AACA;AACA;;IACQxB,KAAK,CAACyB,YAAN,GAAqB,CAArB;IACA;AACR;AACA;AACA;;IACQzB,KAAK,CAAC0B,YAAN,GAAqB,CAArB;IACA;AACR;AACA;AACA;;IACQ1B,KAAK,CAAC2B,mBAAN,GAA4B,KAA5B;IACA;AACR;AACA;AACA;;IACQ3B,KAAK,CAAC4B,aAAN,GAAsB,CAAtB;IACA;AACR;AACA;AACA;;IACQ5B,KAAK,CAAC6B,UAAN,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;IACA;AACR;AACA;AACA;;IACQ7B,KAAK,CAAC8B,cAAN,GAAuB,IAAvB;IACA;AACR;AACA;AACA;;IACQ9B,KAAK,CAAC+B,gBAAN,GAAyB,IAAzB;IACA;AACR;AACA;AACA;;IACQ/B,KAAK,CAACgC,UAAN,GAAmB,IAAnB;IACA;AACR;AACA;AACA;;IACQhC,KAAK,CAACiC,iBAAN,GAA0B,EAA1B;IACA;AACR;AACA;AACA;;IACQjC,KAAK,CAACkC,kBAAN,GAA2B3D,eAAe,EAA1C;IACA,OAAOyB,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIT,uBAAuB,CAAC5B,SAAxB,CAAkCwE,WAAlC,GAAgD,UAAUC,eAAV,EAA2BC,MAA3B,EAAmCC,GAAnC,EAAwCC,MAAxC,EAAgD;IAC5F,IAAI,CAAC,KAAK1B,MAAV,EAAkB;MACd;IACH;;IACD,IAAI2B,gBAAgB,GAAGnD,WAAW,CAAC+C,eAAD,EAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuC,KAAKnC,UAA5C,EAAwD,KAAK6B,iBAA7D,CAAlC;IACA,IAAIxC,OAAO,GAAG,KAAKQ,QAAnB;IACA,IAAIwC,cAAc,GAAG,KAAKP,kBAA1B;IACA,IAAIQ,KAAK,GAAGjD,OAAO,CAACkD,WAApB;;IACA,IAAI,KAAK1B,aAAL,IAAsB,CAA1B,EAA6B;MACzBxB,OAAO,CAACkD,WAAR,GAAsBD,KAAK,GAAG,KAAKzB,aAAnC;IACH;;IACD,IAAI2B,QAAQ,GAAG,KAAKvB,cAApB;;IACA,IAAI,KAAKD,oBAAT,EAA+B;MAC3BwB,QAAQ,IAAI,KAAKvC,aAAjB;IACH;;IACD,KAAK,IAAIwC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGN,gBAAgB,CAACO,MAAtC,EAA8CF,CAAC,GAAGC,EAAlD,EAAsDD,CAAC,IAAI,CAA3D,EAA8D;MAC1D,IAAIG,CAAC,GAAGR,gBAAgB,CAACK,CAAD,CAAhB,GAAsB,KAAK/B,aAAnC;MACA,IAAImC,CAAC,GAAGT,gBAAgB,CAACK,CAAC,GAAG,CAAL,CAAhB,GAA0B,KAAK9B,aAAvC;;MACA,IAAI6B,QAAQ,KAAK,CAAb,IACA,KAAKtB,WAAL,CAAiB,CAAjB,KAAuB,CADvB,IAEA,KAAKA,WAAL,CAAiB,CAAjB,KAAuB,CAF3B,EAE8B;QAC1B,IAAI4B,OAAO,GAAGF,CAAC,GAAG,KAAKlC,aAAvB;QACA,IAAIqC,OAAO,GAAGF,CAAC,GAAG,KAAKlC,aAAvB;QACAzC,gBAAgB,CAACmE,cAAD,EAAiBS,OAAjB,EAA0BC,OAA1B,EAAmC,CAAnC,EAAsC,CAAtC,EAAyCP,QAAzC,EAAmD,CAACM,OAApD,EAA6D,CAACC,OAA9D,CAAhB;QACA1D,OAAO,CAAC2D,YAAR,CAAqBC,KAArB,CAA2B5D,OAA3B,EAAoCgD,cAApC;QACAhD,OAAO,CAAC6D,SAAR,CAAkBJ,OAAlB,EAA2BC,OAA3B;QACA1D,OAAO,CAAC8D,KAAR,CAAc,KAAKjC,WAAL,CAAiB,CAAjB,CAAd,EAAmC,KAAKA,WAAL,CAAiB,CAAjB,CAAnC;QACA7B,OAAO,CAAC+D,SAAR,CAAkB,KAAK3C,MAAvB,EAA+B,KAAKK,aAApC,EAAmD,KAAKC,aAAxD,EAAuE,KAAKI,WAA5E,EAAyF,KAAKP,YAA9F,EAA4G,CAAC,KAAKF,aAAlH,EAAiI,CAAC,KAAKC,aAAvI,EAAsJ,KAAKQ,WAA3J,EAAwK,KAAKP,YAA7K;QACAvB,OAAO,CAAC2D,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC;MACH,CAXD,MAYK;QACD3D,OAAO,CAAC+D,SAAR,CAAkB,KAAK3C,MAAvB,EAA+B,KAAKK,aAApC,EAAmD,KAAKC,aAAxD,EAAuE,KAAKI,WAA5E,EAAyF,KAAKP,YAA9F,EAA4GgC,CAA5G,EAA+GC,CAA/G,EAAkH,KAAK1B,WAAvH,EAAoI,KAAKP,YAAzI;MACH;IACJ;;IACD,IAAI,KAAKC,aAAL,IAAsB,CAA1B,EAA6B;MACzBxB,OAAO,CAACkD,WAAR,GAAsBD,KAAtB;IACH;EACJ,CArCD;EAsCA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACInD,uBAAuB,CAAC5B,SAAxB,CAAkC8F,SAAlC,GAA8C,UAAUrB,eAAV,EAA2BC,MAA3B,EAAmCC,GAAnC,EAAwCC,MAAxC,EAAgD;IAC1F,IAAI,CAAC,KAAKP,UAAN,IAAoB,KAAKR,KAAL,KAAe,EAAvC,EAA2C;MACvC;IACH;;IACD,IAAI,KAAKM,cAAT,EAAyB;MACrB,KAAK4B,oBAAL,CAA0B,KAAK5B,cAA/B;IACH;;IACD,IAAI,KAAKC,gBAAT,EAA2B;MACvB,KAAK4B,sBAAL,CAA4B,KAAK5B,gBAAjC;IACH;;IACD,KAAK6B,oBAAL,CAA0B,KAAK5B,UAA/B;IACA,IAAIQ,gBAAgB,GAAGnD,WAAW,CAAC+C,eAAD,EAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuC,KAAKnC,UAA5C,EAAwD,KAAK6B,iBAA7D,CAAlC;IACA,IAAIxC,OAAO,GAAG,KAAKQ,QAAnB;IACA,IAAI2C,QAAQ,GAAG,KAAKhB,aAApB;;IACA,IAAI,KAAKD,mBAAT,EAA8B;MAC1BiB,QAAQ,IAAI,KAAKvC,aAAjB;IACH;;IACD,OAAOgC,MAAM,GAAGC,GAAhB,EAAqBD,MAAM,IAAIE,MAA/B,EAAuC;MACnC,IAAIS,CAAC,GAAGR,gBAAgB,CAACH,MAAD,CAAhB,GAA2B,KAAKZ,YAAxC;MACA,IAAIwB,CAAC,GAAGT,gBAAgB,CAACH,MAAM,GAAG,CAAV,CAAhB,GAA+B,KAAKX,YAA5C;;MACA,IAAIkB,QAAQ,KAAK,CAAb,IACA,KAAKf,UAAL,CAAgB,CAAhB,KAAsB,CADtB,IAEA,KAAKA,UAAL,CAAgB,CAAhB,KAAsB,CAF1B,EAE6B;QACzB,IAAIY,cAAc,GAAGnE,gBAAgB,CAAC,KAAK4D,kBAAN,EAA0Bc,CAA1B,EAA6BC,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsCL,QAAtC,EAAgD,CAACI,CAAjD,EAAoD,CAACC,CAArD,CAArC;QACAxD,OAAO,CAAC2D,YAAR,CAAqBC,KAArB,CAA2B5D,OAA3B,EAAoCgD,cAApC;QACAhD,OAAO,CAAC6D,SAAR,CAAkBN,CAAlB,EAAqBC,CAArB;QACAxD,OAAO,CAAC8D,KAAR,CAAc,KAAK1B,UAAL,CAAgB,CAAhB,CAAd,EAAkC,KAAKA,UAAL,CAAgB,CAAhB,CAAlC;;QACA,IAAI,KAAKE,gBAAT,EAA2B;UACvBtC,OAAO,CAACoE,UAAR,CAAmB,KAAKrC,KAAxB,EAA+B,CAA/B,EAAkC,CAAlC;QACH;;QACD,IAAI,KAAKM,cAAT,EAAyB;UACrBrC,OAAO,CAACqE,QAAR,CAAiB,KAAKtC,KAAtB,EAA6B,CAA7B,EAAgC,CAAhC;QACH;;QACD/B,OAAO,CAAC2D,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC;MACH,CAdD,MAeK;QACD,IAAI,KAAKrB,gBAAT,EAA2B;UACvBtC,OAAO,CAACoE,UAAR,CAAmB,KAAKrC,KAAxB,EAA+BwB,CAA/B,EAAkCC,CAAlC;QACH;;QACD,IAAI,KAAKnB,cAAT,EAAyB;UACrBrC,OAAO,CAACqE,QAAR,CAAiB,KAAKtC,KAAtB,EAA6BwB,CAA7B,EAAgCC,CAAhC;QACH;MACJ;IACJ;EACJ,CA5CD;EA6CA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI1D,uBAAuB,CAAC5B,SAAxB,CAAkCoG,aAAlC,GAAkD,UAAU3B,eAAV,EAA2BC,MAA3B,EAAmCC,GAAnC,EAAwCC,MAAxC,EAAgDyB,KAAhD,EAAuD;IACrG,IAAIvE,OAAO,GAAG,KAAKQ,QAAnB;IACA,IAAIuC,gBAAgB,GAAGnD,WAAW,CAAC+C,eAAD,EAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuC,KAAKnC,UAA5C,EAAwD,KAAK6B,iBAA7D,CAAlC;IACAxC,OAAO,CAACwE,MAAR,CAAezB,gBAAgB,CAAC,CAAD,CAA/B,EAAoCA,gBAAgB,CAAC,CAAD,CAApD;IACA,IAAIO,MAAM,GAAGP,gBAAgB,CAACO,MAA9B;;IACA,IAAIiB,KAAJ,EAAW;MACPjB,MAAM,IAAI,CAAV;IACH;;IACD,KAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,MAApB,EAA4BF,CAAC,IAAI,CAAjC,EAAoC;MAChCpD,OAAO,CAACyE,MAAR,CAAe1B,gBAAgB,CAACK,CAAD,CAA/B,EAAoCL,gBAAgB,CAACK,CAAC,GAAG,CAAL,CAApD;IACH;;IACD,IAAImB,KAAJ,EAAW;MACPvE,OAAO,CAAC0E,SAAR;IACH;;IACD,OAAO7B,GAAP;EACH,CAfD;EAgBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI/C,uBAAuB,CAAC5B,SAAxB,CAAkCyG,UAAlC,GAA+C,UAAUhC,eAAV,EAA2BC,MAA3B,EAAmCgC,IAAnC,EAAyC9B,MAAzC,EAAiD;IAC5F,KAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGuB,IAAI,CAACtB,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0C,EAAED,CAA5C,EAA+C;MAC3CR,MAAM,GAAG,KAAK0B,aAAL,CAAmB3B,eAAnB,EAAoCC,MAApC,EAA4CgC,IAAI,CAACxB,CAAD,CAAhD,EAAqDN,MAArD,EAA6D,IAA7D,CAAT;IACH;;IACD,OAAOF,MAAP;EACH,CALD;EAMA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI9C,uBAAuB,CAAC5B,SAAxB,CAAkC2G,UAAlC,GAA+C,UAAUC,QAAV,EAAoB;IAC/D,IAAI,CAACnF,UAAU,CAAC,KAAKe,OAAN,EAAeoE,QAAQ,CAACC,SAAT,EAAf,CAAf,EAAqD;MACjD;IACH;;IACD,IAAI,KAAK7D,UAAL,IAAmB,KAAKC,YAA5B,EAA0C;MACtC,IAAI,KAAKD,UAAT,EAAqB;QACjB,KAAK+C,oBAAL,CAA0B,KAAK/C,UAA/B;MACH;;MACD,IAAI,KAAKC,YAAT,EAAuB;QACnB,KAAK+C,sBAAL,CAA4B,KAAK/C,YAAjC;MACH;;MACD,IAAI4B,gBAAgB,GAAGlD,eAAe,CAACiF,QAAD,EAAW,KAAKnE,UAAhB,EAA4B,KAAK6B,iBAAjC,CAAtC;MACA,IAAIwC,EAAE,GAAGjC,gBAAgB,CAAC,CAAD,CAAhB,GAAsBA,gBAAgB,CAAC,CAAD,CAA/C;MACA,IAAIkC,EAAE,GAAGlC,gBAAgB,CAAC,CAAD,CAAhB,GAAsBA,gBAAgB,CAAC,CAAD,CAA/C;MACA,IAAImC,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAUJ,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAAb;MACA,IAAIjF,OAAO,GAAG,KAAKQ,QAAnB;MACAR,OAAO,CAACqF,SAAR;MACArF,OAAO,CAACsF,GAAR,CAAYvC,gBAAgB,CAAC,CAAD,CAA5B,EAAiCA,gBAAgB,CAAC,CAAD,CAAjD,EAAsDmC,MAAtD,EAA8D,CAA9D,EAAiE,IAAIC,IAAI,CAACI,EAA1E;;MACA,IAAI,KAAKrE,UAAT,EAAqB;QACjBlB,OAAO,CAACwF,IAAR;MACH;;MACD,IAAI,KAAKrE,YAAT,EAAuB;QACnBnB,OAAO,CAACyF,MAAR;MACH;IACJ;;IACD,IAAI,KAAK1D,KAAL,KAAe,EAAnB,EAAuB;MACnB,KAAKiC,SAAL,CAAec,QAAQ,CAACY,SAAT,EAAf,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C;IACH;EACJ,CA5BD;EA6BA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI5F,uBAAuB,CAAC5B,SAAxB,CAAkCyH,QAAlC,GAA6C,UAAUC,KAAV,EAAiB;IAC1D,KAAKC,kBAAL,CAAwBD,KAAK,CAACE,OAAN,EAAxB,EAAyCF,KAAK,CAACG,SAAN,EAAzC;IACA,KAAKC,aAAL,CAAmBJ,KAAK,CAACK,QAAN,EAAnB;IACA,KAAKC,YAAL,CAAkBN,KAAK,CAACO,OAAN,EAAlB;EACH,CAJD;EAKA;AACJ;AACA;;;EACIrG,uBAAuB,CAAC5B,SAAxB,CAAkCyF,YAAlC,GAAiD,UAAUxD,SAAV,EAAqB;IAClE,KAAKQ,UAAL,GAAkBR,SAAlB;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIL,uBAAuB,CAAC5B,SAAxB,CAAkCkI,YAAlC,GAAiD,UAAUtB,QAAV,EAAoB;IACjE,IAAIuB,IAAI,GAAGvB,QAAQ,CAACwB,OAAT,EAAX;;IACA,QAAQD,IAAR;MACI,KAAK,OAAL;QACI,KAAKE,SAAL;QACA;QAAsDzB,QADtD;QAEA;;MACJ,KAAK,YAAL;QACI,KAAK0B,cAAL;QACA;QAA2D1B,QAD3D;QAEA;;MACJ,KAAK,SAAL;QACI,KAAK2B,WAAL;QACA;QAAwD3B,QADxD;QAEA;;MACJ,KAAK,YAAL;QACI,KAAK4B,cAAL;QACA;QAA2D5B,QAD3D;QAEA;;MACJ,KAAK,iBAAL;QACI,KAAK6B,mBAAL;QACA;QAAgE7B,QADhE;QAEA;;MACJ,KAAK,cAAL;QACI,KAAK8B,gBAAL;QACA;QAA6D9B,QAD7D;QAEA;;MACJ,KAAK,oBAAL;QACI,KAAK+B,sBAAL;QACA;QAAmE/B,QADnE;QAEA;;MACJ,KAAK,QAAL;QACI,KAAKD,UAAL;QACA;QAAuDC,QADvD;QAEA;;MACJ;IAjCJ;EAmCH,CArCD;EAsCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIhF,uBAAuB,CAAC5B,SAAxB,CAAkC4I,WAAlC,GAAgD,UAAUC,OAAV,EAAmBnB,KAAnB,EAA0B;IACtE,IAAId,QAAQ,GAAGc,KAAK,CAACoB,mBAAN,GAA4BD,OAA5B,CAAf;;IACA,IAAI,CAACjC,QAAD,IAAa,CAACnF,UAAU,CAAC,KAAKe,OAAN,EAAeoE,QAAQ,CAACC,SAAT,EAAf,CAA5B,EAAkE;MAC9D;IACH;;IACD,KAAKY,QAAL,CAAcC,KAAd;IACA,KAAKQ,YAAL,CAAkBtB,QAAlB;EACH,CAPD;EAQA;AACJ;AACA;AACA;AACA;AACA;;;EACIhF,uBAAuB,CAAC5B,SAAxB,CAAkC2I,sBAAlC,GAA2D,UAAU/B,QAAV,EAAoB;IAC3E,IAAImC,UAAU,GAAGnC,QAAQ,CAACoC,kBAAT,EAAjB;;IACA,KAAK,IAAI9D,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG4D,UAAU,CAAC3D,MAAhC,EAAwCF,CAAC,GAAGC,EAA5C,EAAgD,EAAED,CAAlD,EAAqD;MACjD,KAAKgD,YAAL,CAAkBa,UAAU,CAAC7D,CAAD,CAA5B;IACH;EACJ,CALD;EAMA;AACJ;AACA;AACA;AACA;AACA;;;EACItD,uBAAuB,CAAC5B,SAAxB,CAAkCqI,SAAlC,GAA8C,UAAUzB,QAAV,EAAoB;IAC9D,IAAI,KAAKjE,iBAAT,EAA4B;MACxBiE,QAAQ;MAAG;MAAsDA,QAAQ,CAACqC,mBAAT,CAA6B,KAAKtG,iBAAlC,EAAqD,KAAKC,cAA1D,CAAjE;IACH;;IACD,IAAI6B,eAAe,GAAGmC,QAAQ,CAACsC,kBAAT,EAAtB;IACA,IAAItE,MAAM,GAAGgC,QAAQ,CAACuC,SAAT,EAAb;;IACA,IAAI,KAAKjG,MAAT,EAAiB;MACb,KAAKsB,WAAL,CAAiBC,eAAjB,EAAkC,CAAlC,EAAqCA,eAAe,CAACW,MAArD,EAA6DR,MAA7D;IACH;;IACD,IAAI,KAAKf,KAAL,KAAe,EAAnB,EAAuB;MACnB,KAAKiC,SAAL,CAAerB,eAAf,EAAgC,CAAhC,EAAmCA,eAAe,CAACW,MAAnD,EAA2DR,MAA3D;IACH;EACJ,CAZD;EAaA;AACJ;AACA;AACA;AACA;AACA;;;EACIhD,uBAAuB,CAAC5B,SAAxB,CAAkCwI,cAAlC,GAAmD,UAAU5B,QAAV,EAAoB;IACnE,IAAI,KAAKjE,iBAAT,EAA4B;MACxBiE,QAAQ;MAAG;MAA2DA,QAAQ,CAACqC,mBAAT,CAA6B,KAAKtG,iBAAlC,EAAqD,KAAKC,cAA1D,CAAtE;IACH;;IACD,IAAI6B,eAAe,GAAGmC,QAAQ,CAACsC,kBAAT,EAAtB;IACA,IAAItE,MAAM,GAAGgC,QAAQ,CAACuC,SAAT,EAAb;;IACA,IAAI,KAAKjG,MAAT,EAAiB;MACb,KAAKsB,WAAL,CAAiBC,eAAjB,EAAkC,CAAlC,EAAqCA,eAAe,CAACW,MAArD,EAA6DR,MAA7D;IACH;;IACD,IAAI,KAAKf,KAAL,KAAe,EAAnB,EAAuB;MACnB,KAAKiC,SAAL,CAAerB,eAAf,EAAgC,CAAhC,EAAmCA,eAAe,CAACW,MAAnD,EAA2DR,MAA3D;IACH;EACJ,CAZD;EAaA;AACJ;AACA;AACA;AACA;AACA;;;EACIhD,uBAAuB,CAAC5B,SAAxB,CAAkCsI,cAAlC,GAAmD,UAAU1B,QAAV,EAAoB;IACnE,IAAI,KAAKjE,iBAAT,EAA4B;MACxBiE,QAAQ;MAAG;MAA2DA,QAAQ,CAACqC,mBAAT,CAA6B,KAAKtG,iBAAlC,EAAqD,KAAKC,cAA1D,CAAtE;IACH;;IACD,IAAI,CAACnB,UAAU,CAAC,KAAKe,OAAN,EAAeoE,QAAQ,CAACC,SAAT,EAAf,CAAf,EAAqD;MACjD;IACH;;IACD,IAAI,KAAK5D,YAAT,EAAuB;MACnB,KAAK+C,sBAAL,CAA4B,KAAK/C,YAAjC;MACA,IAAInB,OAAO,GAAG,KAAKQ,QAAnB;MACA,IAAImC,eAAe,GAAGmC,QAAQ,CAACsC,kBAAT,EAAtB;MACApH,OAAO,CAACqF,SAAR;MACA,KAAKf,aAAL,CAAmB3B,eAAnB,EAAoC,CAApC,EAAuCA,eAAe,CAACW,MAAvD,EAA+DwB,QAAQ,CAACuC,SAAT,EAA/D,EAAqF,KAArF;MACArH,OAAO,CAACyF,MAAR;IACH;;IACD,IAAI,KAAK1D,KAAL,KAAe,EAAnB,EAAuB;MACnB,IAAIuF,YAAY,GAAGxC,QAAQ,CAACyC,eAAT,EAAnB;MACA,KAAKvD,SAAL,CAAesD,YAAf,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC;IACH;EACJ,CAnBD;EAoBA;AACJ;AACA;AACA;AACA;AACA;;;EACIxH,uBAAuB,CAAC5B,SAAxB,CAAkCyI,mBAAlC,GAAwD,UAAU7B,QAAV,EAAoB;IACxE,IAAI,KAAKjE,iBAAT,EAA4B;MACxBiE,QAAQ;MACJ;MAAgEA,QAAQ,CAACqC,mBAAT,CAA6B,KAAKtG,iBAAlC,EAAqD,KAAKC,cAA1D,CADpE;IAEH;;IACD,IAAI0G,cAAc,GAAG1C,QAAQ,CAACC,SAAT,EAArB;;IACA,IAAI,CAACpF,UAAU,CAAC,KAAKe,OAAN,EAAe8G,cAAf,CAAf,EAA+C;MAC3C;IACH;;IACD,IAAI,KAAKrG,YAAT,EAAuB;MACnB,KAAK+C,sBAAL,CAA4B,KAAK/C,YAAjC;MACA,IAAInB,OAAO,GAAG,KAAKQ,QAAnB;MACA,IAAImC,eAAe,GAAGmC,QAAQ,CAACsC,kBAAT,EAAtB;MACA,IAAIxE,MAAM,GAAG,CAAb;MACA,IAAIgC,IAAI;MAAG;MAA8BE,QAAQ,CAAC2C,OAAT,EAAzC;MACA,IAAI3E,MAAM,GAAGgC,QAAQ,CAACuC,SAAT,EAAb;MACArH,OAAO,CAACqF,SAAR;;MACA,KAAK,IAAIjC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGuB,IAAI,CAACtB,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0C,EAAED,CAA5C,EAA+C;QAC3CR,MAAM,GAAG,KAAK0B,aAAL,CAAmB3B,eAAnB,EAAoCC,MAApC,EAA4CgC,IAAI,CAACxB,CAAD,CAAhD,EAAqDN,MAArD,EAA6D,KAA7D,CAAT;MACH;;MACD9C,OAAO,CAACyF,MAAR;IACH;;IACD,IAAI,KAAK1D,KAAL,KAAe,EAAnB,EAAuB;MACnB,IAAI2F,aAAa,GAAG5C,QAAQ,CAAC6C,gBAAT,EAApB;MACA,KAAK3D,SAAL,CAAe0D,aAAf,EAA8B,CAA9B,EAAiCA,aAAa,CAACpE,MAA/C,EAAuD,CAAvD;IACH;EACJ,CA1BD;EA2BA;AACJ;AACA;AACA;AACA;AACA;;;EACIxD,uBAAuB,CAAC5B,SAAxB,CAAkCuI,WAAlC,GAAgD,UAAU3B,QAAV,EAAoB;IAChE,IAAI,KAAKjE,iBAAT,EAA4B;MACxBiE,QAAQ;MAAG;MAAwDA,QAAQ,CAACqC,mBAAT,CAA6B,KAAKtG,iBAAlC,EAAqD,KAAKC,cAA1D,CAAnE;IACH;;IACD,IAAI,CAACnB,UAAU,CAAC,KAAKe,OAAN,EAAeoE,QAAQ,CAACC,SAAT,EAAf,CAAf,EAAqD;MACjD;IACH;;IACD,IAAI,KAAK5D,YAAL,IAAqB,KAAKD,UAA9B,EAA0C;MACtC,IAAI,KAAKA,UAAT,EAAqB;QACjB,KAAK+C,oBAAL,CAA0B,KAAK/C,UAA/B;MACH;;MACD,IAAI,KAAKC,YAAT,EAAuB;QACnB,KAAK+C,sBAAL,CAA4B,KAAK/C,YAAjC;MACH;;MACD,IAAInB,OAAO,GAAG,KAAKQ,QAAnB;MACAR,OAAO,CAACqF,SAAR;MACA,KAAKV,UAAL,CAAgBG,QAAQ,CAAC8C,0BAAT,EAAhB,EAAuD,CAAvD;MACA;MAA8B9C,QAAQ,CAAC2C,OAAT,EAD9B,EACmD3C,QAAQ,CAACuC,SAAT,EADnD;;MAEA,IAAI,KAAKnG,UAAT,EAAqB;QACjBlB,OAAO,CAACwF,IAAR;MACH;;MACD,IAAI,KAAKrE,YAAT,EAAuB;QACnBnB,OAAO,CAACyF,MAAR;MACH;IACJ;;IACD,IAAI,KAAK1D,KAAL,KAAe,EAAnB,EAAuB;MACnB,IAAI8F,iBAAiB,GAAG/C,QAAQ,CAACgD,oBAAT,EAAxB;MACA,KAAK9D,SAAL,CAAe6D,iBAAf,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC;IACH;EACJ,CA7BD;EA8BA;AACJ;AACA;AACA;AACA;;;EACI/H,uBAAuB,CAAC5B,SAAxB,CAAkC0I,gBAAlC,GAAqD,UAAU9B,QAAV,EAAoB;IACrE,IAAI,KAAKjE,iBAAT,EAA4B;MACxBiE,QAAQ;MAAG;MAA6DA,QAAQ,CAACqC,mBAAT,CAA6B,KAAKtG,iBAAlC,EAAqD,KAAKC,cAA1D,CAAxE;IACH;;IACD,IAAI,CAACnB,UAAU,CAAC,KAAKe,OAAN,EAAeoE,QAAQ,CAACC,SAAT,EAAf,CAAf,EAAqD;MACjD;IACH;;IACD,IAAI,KAAK5D,YAAL,IAAqB,KAAKD,UAA9B,EAA0C;MACtC,IAAI,KAAKA,UAAT,EAAqB;QACjB,KAAK+C,oBAAL,CAA0B,KAAK/C,UAA/B;MACH;;MACD,IAAI,KAAKC,YAAT,EAAuB;QACnB,KAAK+C,sBAAL,CAA4B,KAAK/C,YAAjC;MACH;;MACD,IAAInB,OAAO,GAAG,KAAKQ,QAAnB;MACA,IAAImC,eAAe,GAAGmC,QAAQ,CAAC8C,0BAAT,EAAtB;MACA,IAAIhF,MAAM,GAAG,CAAb;MACA,IAAImF,KAAK,GAAGjD,QAAQ,CAACkD,QAAT,EAAZ;MACA,IAAIlF,MAAM,GAAGgC,QAAQ,CAACuC,SAAT,EAAb;MACArH,OAAO,CAACqF,SAAR;;MACA,KAAK,IAAIjC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG0E,KAAK,CAACzE,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2C,EAAED,CAA7C,EAAgD;QAC5C,IAAIwB,IAAI,GAAGmD,KAAK,CAAC3E,CAAD,CAAhB;QACAR,MAAM,GAAG,KAAK+B,UAAL,CAAgBhC,eAAhB,EAAiCC,MAAjC,EAAyCgC,IAAzC,EAA+C9B,MAA/C,CAAT;MACH;;MACD,IAAI,KAAK5B,UAAT,EAAqB;QACjBlB,OAAO,CAACwF,IAAR;MACH;;MACD,IAAI,KAAKrE,YAAT,EAAuB;QACnBnB,OAAO,CAACyF,MAAR;MACH;IACJ;;IACD,IAAI,KAAK1D,KAAL,KAAe,EAAnB,EAAuB;MACnB,IAAIkG,kBAAkB,GAAGnD,QAAQ,CAACoD,qBAAT,EAAzB;MACA,KAAKlE,SAAL,CAAeiE,kBAAf,EAAmC,CAAnC,EAAsCA,kBAAkB,CAAC3E,MAAzD,EAAiE,CAAjE;IACH;EACJ,CAnCD;EAoCA;AACJ;AACA;AACA;;;EACIxD,uBAAuB,CAAC5B,SAAxB,CAAkC+F,oBAAlC,GAAyD,UAAUkE,SAAV,EAAqB;IAC1E,IAAInI,OAAO,GAAG,KAAKQ,QAAnB;IACA,IAAI4H,gBAAgB,GAAG,KAAKrH,iBAA5B;;IACA,IAAI,CAACqH,gBAAL,EAAuB;MACnBpI,OAAO,CAACqI,SAAR,GAAoBF,SAAS,CAACE,SAA9B;MACA,KAAKtH,iBAAL,GAAyB;QACrBsH,SAAS,EAAEF,SAAS,CAACE;MADA,CAAzB;IAGH,CALD,MAMK;MACD,IAAID,gBAAgB,CAACC,SAAjB,IAA8BF,SAAS,CAACE,SAA5C,EAAuD;QACnDD,gBAAgB,CAACC,SAAjB,GAA6BF,SAAS,CAACE,SAAvC;QACArI,OAAO,CAACqI,SAAR,GAAoBF,SAAS,CAACE,SAA9B;MACH;IACJ;EACJ,CAfD;EAgBA;AACJ;AACA;AACA;;;EACIvI,uBAAuB,CAAC5B,SAAxB,CAAkCgG,sBAAlC,GAA2D,UAAUoE,WAAV,EAAuB;IAC9E,IAAItI,OAAO,GAAG,KAAKQ,QAAnB;IACA,IAAI+H,kBAAkB,GAAG,KAAKvH,mBAA9B;;IACA,IAAI,CAACuH,kBAAL,EAAyB;MACrBvI,OAAO,CAACwI,OAAR,GAAkBF,WAAW,CAACE,OAA9B;;MACA,IAAIxI,OAAO,CAACyI,WAAZ,EAAyB;QACrBzI,OAAO,CAACyI,WAAR,CAAoBH,WAAW,CAACI,QAAhC;QACA1I,OAAO,CAAC2I,cAAR,GAAyBL,WAAW,CAACK,cAArC;MACH;;MACD3I,OAAO,CAAC4I,QAAR,GAAmBN,WAAW,CAACM,QAA/B;MACA5I,OAAO,CAAC6I,SAAR,GAAoBP,WAAW,CAACO,SAAhC;MACA7I,OAAO,CAAC8I,UAAR,GAAqBR,WAAW,CAACQ,UAAjC;MACA9I,OAAO,CAAC+I,WAAR,GAAsBT,WAAW,CAACS,WAAlC;MACA,KAAK/H,mBAAL,GAA2B;QACvBwH,OAAO,EAAEF,WAAW,CAACE,OADE;QAEvBE,QAAQ,EAAEJ,WAAW,CAACI,QAFC;QAGvBC,cAAc,EAAEL,WAAW,CAACK,cAHL;QAIvBC,QAAQ,EAAEN,WAAW,CAACM,QAJC;QAKvBC,SAAS,EAAEP,WAAW,CAACO,SALA;QAMvBC,UAAU,EAAER,WAAW,CAACQ,UAND;QAOvBC,WAAW,EAAET,WAAW,CAACS;MAPF,CAA3B;IASH,CAnBD,MAoBK;MACD,IAAIR,kBAAkB,CAACC,OAAnB,IAA8BF,WAAW,CAACE,OAA9C,EAAuD;QACnDD,kBAAkB,CAACC,OAAnB,GAA6BF,WAAW,CAACE,OAAzC;QACAxI,OAAO,CAACwI,OAAR,GAAkBF,WAAW,CAACE,OAA9B;MACH;;MACD,IAAIxI,OAAO,CAACyI,WAAZ,EAAyB;QACrB,IAAI,CAAC/I,MAAM,CAAC6I,kBAAkB,CAACG,QAApB,EAA8BJ,WAAW,CAACI,QAA1C,CAAX,EAAgE;UAC5D1I,OAAO,CAACyI,WAAR,CAAqBF,kBAAkB,CAACG,QAAnB,GAA8BJ,WAAW,CAACI,QAA/D;QACH;;QACD,IAAIH,kBAAkB,CAACI,cAAnB,IAAqCL,WAAW,CAACK,cAArD,EAAqE;UACjEJ,kBAAkB,CAACI,cAAnB,GAAoCL,WAAW,CAACK,cAAhD;UACA3I,OAAO,CAAC2I,cAAR,GAAyBL,WAAW,CAACK,cAArC;QACH;MACJ;;MACD,IAAIJ,kBAAkB,CAACK,QAAnB,IAA+BN,WAAW,CAACM,QAA/C,EAAyD;QACrDL,kBAAkB,CAACK,QAAnB,GAA8BN,WAAW,CAACM,QAA1C;QACA5I,OAAO,CAAC4I,QAAR,GAAmBN,WAAW,CAACM,QAA/B;MACH;;MACD,IAAIL,kBAAkB,CAACM,SAAnB,IAAgCP,WAAW,CAACO,SAAhD,EAA2D;QACvDN,kBAAkB,CAACM,SAAnB,GAA+BP,WAAW,CAACO,SAA3C;QACA7I,OAAO,CAAC6I,SAAR,GAAoBP,WAAW,CAACO,SAAhC;MACH;;MACD,IAAIN,kBAAkB,CAACO,UAAnB,IAAiCR,WAAW,CAACQ,UAAjD,EAA6D;QACzDP,kBAAkB,CAACO,UAAnB,GAAgCR,WAAW,CAACQ,UAA5C;QACA9I,OAAO,CAAC8I,UAAR,GAAqBR,WAAW,CAACQ,UAAjC;MACH;;MACD,IAAIP,kBAAkB,CAACQ,WAAnB,IAAkCT,WAAW,CAACS,WAAlD,EAA+D;QAC3DR,kBAAkB,CAACQ,WAAnB,GAAiCT,WAAW,CAACS,WAA7C;QACA/I,OAAO,CAAC+I,WAAR,GAAsBT,WAAW,CAACS,WAAlC;MACH;IACJ;EACJ,CAtDD;EAuDA;AACJ;AACA;AACA;;;EACIjJ,uBAAuB,CAAC5B,SAAxB,CAAkCiG,oBAAlC,GAAyD,UAAU6E,SAAV,EAAqB;IAC1E,IAAIhJ,OAAO,GAAG,KAAKQ,QAAnB;IACA,IAAIyI,gBAAgB,GAAG,KAAKhI,iBAA5B;IACA,IAAIiI,SAAS,GAAGF,SAAS,CAACE,SAAV,GACVF,SAAS,CAACE,SADA,GAEV1J,gBAFN;;IAGA,IAAI,CAACyJ,gBAAL,EAAuB;MACnBjJ,OAAO,CAACmJ,IAAR,GAAeH,SAAS,CAACG,IAAzB;MACAnJ,OAAO,CAACkJ,SAAR;MAAoB;MAAgCA,SAApD;MACAlJ,OAAO,CAACoJ,YAAR;MAAuB;MAAmCJ,SAAS,CAACI,YAApE;MACA,KAAKnI,iBAAL,GAAyB;QACrBkI,IAAI,EAAEH,SAAS,CAACG,IADK;QAErBD,SAAS,EAAEA,SAFU;QAGrBE,YAAY,EAAEJ,SAAS,CAACI;MAHH,CAAzB;IAKH,CATD,MAUK;MACD,IAAIH,gBAAgB,CAACE,IAAjB,IAAyBH,SAAS,CAACG,IAAvC,EAA6C;QACzCF,gBAAgB,CAACE,IAAjB,GAAwBH,SAAS,CAACG,IAAlC;QACAnJ,OAAO,CAACmJ,IAAR,GAAeH,SAAS,CAACG,IAAzB;MACH;;MACD,IAAIF,gBAAgB,CAACC,SAAjB,IAA8BA,SAAlC,EAA6C;QACzCD,gBAAgB,CAACC,SAAjB;QAA6B;QAAgCA,SAA7D;QACAlJ,OAAO,CAACkJ,SAAR;QAAoB;QAAgCA,SAApD;MACH;;MACD,IAAID,gBAAgB,CAACG,YAAjB,IAAiCJ,SAAS,CAACI,YAA/C,EAA6D;QACzDH,gBAAgB,CAACG,YAAjB;QAAgC;QAAmCJ,SAAS,CAACI,YAA7E;QACApJ,OAAO,CAACoJ,YAAR;QAAuB;QAAmCJ,SAAS,CAACI,YAApE;MACH;IACJ;EACJ,CA9BD;EA+BA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACItJ,uBAAuB,CAAC5B,SAAxB,CAAkC2H,kBAAlC,GAAuD,UAAUwC,SAAV,EAAqBU,WAArB,EAAkC;IACrF,IAAIxI,KAAK,GAAG,IAAZ;;IACA,IAAI,CAAC8H,SAAL,EAAgB;MACZ,KAAKnH,UAAL,GAAkB,IAAlB;IACH,CAFD,MAGK;MACD,IAAImI,cAAc,GAAGhB,SAAS,CAACiB,QAAV,EAArB;MACA,KAAKpI,UAAL,GAAkB;QACdmH,SAAS,EAAE1J,WAAW,CAAC0K,cAAc,GAAGA,cAAH,GAAoBtK,gBAAnC;MADR,CAAlB;IAGH;;IACD,IAAI,CAACgK,WAAL,EAAkB;MACd,KAAK5H,YAAL,GAAoB,IAApB;IACH,CAFD,MAGK;MACD,IAAIoI,gBAAgB,GAAGR,WAAW,CAACO,QAAZ,EAAvB;MACA,IAAIE,kBAAkB,GAAGT,WAAW,CAACU,UAAZ,EAAzB;MACA,IAAIC,mBAAmB,GAAGX,WAAW,CAACY,WAAZ,EAA1B;MACA,IAAIC,yBAAyB,GAAGb,WAAW,CAACc,iBAAZ,EAAhC;MACA,IAAIC,mBAAmB,GAAGf,WAAW,CAACgB,WAAZ,EAA1B;MACA,IAAIC,gBAAgB,GAAGjB,WAAW,CAACkB,QAAZ,EAAvB;MACA,IAAIC,qBAAqB,GAAGnB,WAAW,CAACoB,aAAZ,EAA5B;MACA,IAAIzB,QAAQ,GAAGgB,mBAAmB,GAC5BA,mBAD4B,GAE5BxK,eAFN;MAGA,KAAKiC,YAAL,GAAoB;QAChBqH,OAAO,EAAEgB,kBAAkB,KAAKY,SAAvB,GACHZ,kBADG,GAEHvK,cAHU;QAIhByJ,QAAQ,EAAE,KAAKjI,WAAL,KAAqB,CAArB,GACJiI,QADI,GAEJA,QAAQ,CAAC2B,GAAT,CAAa,UAAUC,CAAV,EAAa;UAAE,OAAOA,CAAC,GAAG/J,KAAK,CAACE,WAAjB;QAA+B,CAA3D,CANU;QAOhBkI,cAAc,EAAE,CAACiB,yBAAyB,GACpCA,yBADoC,GAEpCzK,qBAFU,IAEe,KAAKsB,WATpB;QAUhBmI,QAAQ,EAAEkB,mBAAmB,KAAKM,SAAxB,GACJN,mBADI,GAEJ1K,eAZU;QAahByJ,SAAS,EAAE,CAACmB,gBAAgB,KAAKI,SAArB,GACNJ,gBADM,GAEN3K,gBAFK,IAEe,KAAKoB,WAff;QAgBhBqI,UAAU,EAAEoB,qBAAqB,KAAKE,SAA1B,GACNF,qBADM,GAEN5K,iBAlBU;QAmBhByJ,WAAW,EAAEpK,WAAW,CAAC4K,gBAAgB,GAAGA,gBAAH,GAAsBhK,kBAAvC;MAnBR,CAApB;IAqBH;EACJ,CA/CD;EAgDA;AACJ;AACA;AACA;AACA;AACA;;;EACIO,uBAAuB,CAAC5B,SAAxB,CAAkC8H,aAAlC,GAAkD,UAAUuE,UAAV,EAAsB;IACpE,IAAIC,SAAJ;;IACA,IAAI,CAACD,UAAD,IAAe,EAAEC,SAAS,GAAGD,UAAU,CAACE,OAAX,EAAd,CAAnB,EAAwD;MACpD,KAAKrJ,MAAL,GAAc,IAAd;MACA;IACH;;IACD,IAAIsJ,WAAW,GAAGH,UAAU,CAACI,SAAX,EAAlB;IACA,IAAIC,WAAW,GAAGL,UAAU,CAACM,SAAX,EAAlB;IACA,KAAKzJ,MAAL,GAAcmJ,UAAU,CAACtE,QAAX,CAAoB,KAAKxF,WAAzB,CAAd;IACA,KAAKY,aAAL,GAAqBqJ,WAAW,CAAC,CAAD,CAAX,GAAiB,KAAKjK,WAA3C;IACA,KAAKa,aAAL,GAAqBoJ,WAAW,CAAC,CAAD,CAAX,GAAiB,KAAKjK,WAA3C;IACA,KAAKc,YAAL,GAAoBiJ,SAAS,CAAC,CAAD,CAAT,GAAe,KAAK/J,WAAxC;IACA,KAAKe,aAAL,GAAqB+I,UAAU,CAACO,UAAX,EAArB;IACA,KAAKrJ,aAAL,GAAqBmJ,WAAW,CAAC,CAAD,CAAhC;IACA,KAAKlJ,aAAL,GAAqBkJ,WAAW,CAAC,CAAD,CAAhC;IACA,KAAKjJ,oBAAL,GAA4B4I,UAAU,CAACQ,iBAAX,EAA5B;IACA,KAAKnJ,cAAL,GAAsB2I,UAAU,CAACS,WAAX,EAAtB;IACA,KAAKnJ,WAAL,GAAmB0I,UAAU,CAACU,aAAX,EAAnB;IACA,KAAKnJ,WAAL,GAAmB0I,SAAS,CAAC,CAAD,CAAT,GAAe,KAAK/J,WAAvC;EACH,CAnBD;EAoBA;AACJ;AACA;AACA;AACA;AACA;;;EACIX,uBAAuB,CAAC5B,SAAxB,CAAkCgI,YAAlC,GAAiD,UAAUgF,SAAV,EAAqB;IAClE,IAAI,CAACA,SAAL,EAAgB;MACZ,KAAKnJ,KAAL,GAAa,EAAb;IACH,CAFD,MAGK;MACD,IAAIoJ,aAAa,GAAGD,SAAS,CAACpF,OAAV,EAApB;;MACA,IAAI,CAACqF,aAAL,EAAoB;QAChB,KAAK9I,cAAL,GAAsB,IAAtB;MACH,CAFD,MAGK;QACD,IAAI+I,kBAAkB,GAAGD,aAAa,CAAC7B,QAAd,EAAzB;QACA,KAAKjH,cAAL,GAAsB;UAClBgG,SAAS,EAAE1J,WAAW,CAACyM,kBAAkB,GAAGA,kBAAH,GAAwBrM,gBAA3C;QADJ,CAAtB;MAGH;;MACD,IAAIsM,eAAe,GAAGH,SAAS,CAACnF,SAAV,EAAtB;;MACA,IAAI,CAACsF,eAAL,EAAsB;QAClB,KAAK/I,gBAAL,GAAwB,IAAxB;MACH,CAFD,MAGK;QACD,IAAIgJ,oBAAoB,GAAGD,eAAe,CAAC/B,QAAhB,EAA3B;QACA,IAAIiC,sBAAsB,GAAGF,eAAe,CAAC5B,UAAhB,EAA7B;QACA,IAAI+B,uBAAuB,GAAGH,eAAe,CAAC1B,WAAhB,EAA9B;QACA,IAAI8B,6BAA6B,GAAGJ,eAAe,CAACxB,iBAAhB,EAApC;QACA,IAAI6B,uBAAuB,GAAGL,eAAe,CAACtB,WAAhB,EAA9B;QACA,IAAI4B,oBAAoB,GAAGN,eAAe,CAACpB,QAAhB,EAA3B;QACA,IAAI2B,yBAAyB,GAAGP,eAAe,CAAClB,aAAhB,EAAhC;QACA,KAAK7H,gBAAL,GAAwB;UACpBkG,OAAO,EAAE+C,sBAAsB,KAAKnB,SAA3B,GACHmB,sBADG,GAEHtM,cAHc;UAIpByJ,QAAQ,EAAE8C,uBAAuB,GAC3BA,uBAD2B,GAE3BtM,eANc;UAOpByJ,cAAc,EAAE8C,6BAA6B,GACvCA,6BADuC,GAEvCtM,qBATc;UAUpByJ,QAAQ,EAAE8C,uBAAuB,KAAKtB,SAA5B,GACJsB,uBADI,GAEJtM,eAZc;UAapByJ,SAAS,EAAE8C,oBAAoB,KAAKvB,SAAzB,GACLuB,oBADK,GAELtM,gBAfc;UAgBpByJ,UAAU,EAAE8C,yBAAyB,KAAKxB,SAA9B,GACNwB,yBADM,GAENtM,iBAlBc;UAmBpByJ,WAAW,EAAEpK,WAAW,CAAC2M,oBAAoB,GAAGA,oBAAH,GAA0B/L,kBAA/C;QAnBJ,CAAxB;MAqBH;;MACD,IAAIsM,QAAQ,GAAGX,SAAS,CAACY,OAAV,EAAf;MACA,IAAIC,WAAW,GAAGb,SAAS,CAACc,UAAV,EAAlB;MACA,IAAIC,WAAW,GAAGf,SAAS,CAACgB,UAAV,EAAlB;MACA,IAAIC,kBAAkB,GAAGjB,SAAS,CAACH,iBAAV,EAAzB;MACA,IAAIqB,YAAY,GAAGlB,SAAS,CAACF,WAAV,EAAnB;MACA,IAAIqB,SAAS,GAAGnB,SAAS,CAACD,aAAV,EAAhB;MACA,IAAIqB,QAAQ,GAAGpB,SAAS,CAAC/E,OAAV,EAAf;MACA,IAAIoG,aAAa,GAAGrB,SAAS,CAACsB,YAAV,EAApB;MACA,IAAIC,gBAAgB,GAAGvB,SAAS,CAACwB,eAAV,EAAvB;MACA,KAAKnK,UAAL,GAAkB;QACd4G,IAAI,EAAE0C,QAAQ,KAAKzB,SAAb,GAAyByB,QAAzB,GAAoC7M,WAD5B;QAEdkK,SAAS,EAAEqD,aAAa,KAAKnC,SAAlB,GAA8BmC,aAA9B,GAA8C/M,gBAF3C;QAGd4J,YAAY,EAAEqD,gBAAgB,KAAKrC,SAArB,GACRqC,gBADQ,GAERhN;MALQ,CAAlB;MAOA,KAAKsC,KAAL,GACIuK,QAAQ,KAAKlC,SAAb,GACMpM,KAAK,CAAC2O,OAAN,CAAcL,QAAd,IACIA,QAAQ,CAACM,MAAT,CAAgB,UAAUC,GAAV,EAAeC,CAAf,EAAkB1J,CAAlB,EAAqB;QAAE,OAAQyJ,GAAG,IAAIzJ,CAAC,GAAG,CAAJ,GAAQ,GAAR,GAAc0J,CAA7B;MAAkC,CAAzE,EAA2E,EAA3E,CADJ,GAEIR,QAHV,GAIM,EALV;MAMA,KAAKtK,YAAL,GACI+J,WAAW,KAAK3B,SAAhB,GAA4B,KAAK3J,WAAL,GAAmBsL,WAA/C,GAA6D,CADjE;MAEA,KAAK9J,YAAL,GACIgK,WAAW,KAAK7B,SAAhB,GAA4B,KAAK3J,WAAL,GAAmBwL,WAA/C,GAA6D,CADjE;MAEA,KAAK/J,mBAAL,GACIiK,kBAAkB,KAAK/B,SAAvB,GAAmC+B,kBAAnC,GAAwD,KAD5D;MAEA,KAAKhK,aAAL,GAAqBiK,YAAY,KAAKhC,SAAjB,GAA6BgC,YAA7B,GAA4C,CAAjE;MACA,KAAKhK,UAAL,GAAkB,CACd,KAAK3B,WAAL,GAAmB4L,SAAS,CAAC,CAAD,CADd,EAEd,KAAK5L,WAAL,GAAmB4L,SAAS,CAAC,CAAD,CAFd,CAAlB;IAIH;EACJ,CAnFD;;EAoFA,OAAOvM,uBAAP;AACH,CA94B4C,CA84B3CpB,aA94B2C,CAA7C;;AA+4BA,eAAeoB,uBAAf"},"metadata":{},"sourceType":"module"}