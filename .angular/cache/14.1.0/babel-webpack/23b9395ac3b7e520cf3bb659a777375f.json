{"ast":null,"code":"/**\n * @module ol/control/MousePosition\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport { get as getProjection, getTransformFromProjections, getUserProjection, identityTransform } from '../proj.js';\nimport { listen } from '../events.js';\n/**\n * @type {string}\n */\n\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\n\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\n\nvar MousePosition =\n/** @class */\nfunction (_super) {\n  __extends(MousePosition, _super);\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n\n\n  function MousePosition(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n    _this = _super.call(this, {\n      element: element,\n      render: options.render,\n      target: options.target\n    }) || this;\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n\n    _this.un;\n\n    _this.addChangeListener(PROJECTION, _this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      _this.setCoordinateFormat(options.coordinateFormat);\n    }\n\n    if (options.projection) {\n      _this.setProjection(options.projection);\n    }\n    /**\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     * @type {boolean}\n     */\n\n\n    var renderOnMouseOut = true;\n    /**\n     * @type {string}\n     */\n\n    var placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n    /**\n     * @private\n     * @type {string}\n     */\n\n\n    _this.placeholder_ = placeholder;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.renderOnMouseOut_ = renderOnMouseOut;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.renderedHTML_ = element.innerHTML;\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n\n    _this.mapProjection_ = null;\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n\n    _this.transform_ = null;\n    return _this;\n  }\n  /**\n   * @private\n   */\n\n\n  MousePosition.prototype.handleProjectionChanged_ = function () {\n    this.transform_ = null;\n  };\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.getCoordinateFormat = function () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */\n      this.get(COORDINATE_FORMAT)\n    );\n  };\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.getProjection = function () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */\n      this.get(PROJECTION)\n    );\n  };\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n\n\n  MousePosition.prototype.handleMouseMove = function (event) {\n    var map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  };\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n\n\n  MousePosition.prototype.handleMouseOut = function (event) {\n    this.updateHTML_(null);\n  };\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n\n\n  MousePosition.prototype.setMap = function (map) {\n    _super.prototype.setMap.call(this, map);\n\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this));\n\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this));\n      }\n\n      this.updateHTML_(null);\n    }\n  };\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.setCoordinateFormat = function (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.setProjection = function (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n\n\n  MousePosition.prototype.updateHTML_ = function (pixel) {\n    var html = this.placeholder_;\n\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n\n        if (projection) {\n          this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixelInternal(pixel);\n\n      if (coordinate) {\n        var userProjection = getUserProjection();\n\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(this.mapProjection_, userProjection);\n        }\n\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n\n\n  MousePosition.prototype.render = function (mapEvent) {\n    var frameState = mapEvent.frameState;\n\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  };\n\n  return MousePosition;\n}(Control);\n\nexport default MousePosition;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Control","EventType","get","getProjection","getTransformFromProjections","getUserProjection","identityTransform","listen","PROJECTION","COORDINATE_FORMAT","MousePosition","_super","opt_options","_this","options","element","document","createElement","className","undefined","render","target","on","once","un","addChangeListener","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","projection","setProjection","renderOnMouseOut","placeholder","undefinedHTML","placeholder_","renderOnMouseOut_","renderedHTML_","innerHTML","mapProjection_","transform_","getCoordinateFormat","handleMouseMove","event","map","getMap","updateHTML_","getEventPixel","handleMouseOut","setMap","viewport","getViewport","listenerKeys","push","POINTERMOVE","POINTEROUT","format","set","pixel","html","coordinate","getCoordinateFromPixelInternal","userProjection","toString","mapEvent","frameState","viewState"],"sources":["/home/asura/github/smartcity/node_modules/ol/control/MousePosition.js"],"sourcesContent":["/**\n * @module ol/control/MousePosition\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport { get as getProjection, getTransformFromProjections, getUserProjection, identityTransform, } from '../proj.js';\nimport { listen } from '../events.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options} [opt_options] Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className =\n            options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /***\n         * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {MousePositionOnSignature<void>}\n         */\n        _this.un;\n        _this.addChangeListener(PROJECTION, _this.handleProjectionChanged_);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * Change this to `false` when removing the deprecated `undefinedHTML` option.\n         * @type {boolean}\n         */\n        var renderOnMouseOut = true;\n        /**\n         * @type {string}\n         */\n        var placeholder = '&#160;';\n        if ('undefinedHTML' in options) {\n            // deprecated behavior\n            if (options.undefinedHTML !== undefined) {\n                placeholder = options.undefinedHTML;\n            }\n            renderOnMouseOut = !!placeholder;\n        }\n        else if ('placeholder' in options) {\n            if (options.placeholder === false) {\n                renderOnMouseOut = false;\n            }\n            else {\n                placeholder = String(options.placeholder);\n            }\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.placeholder_ = placeholder;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = renderOnMouseOut;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {?import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION));\n    };\n    /**\n     * @param {MouseEvent} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.updateHTML_(map.getEventPixel(event));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this));\n            }\n            this.updateHTML_(null);\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.placeholder_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixelInternal(pixel);\n            if (coordinate) {\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, userProjection);\n                }\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    /**\n     * Update the projection. Rendering of the coordinates is done in\n     * `handleMouseMove` and `handleMouseUp`.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    MousePosition.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.mapProjection_ = null;\n        }\n        else {\n            if (this.mapProjection_ != frameState.viewState.projection) {\n                this.mapProjection_ = frameState.viewState.projection;\n                this.transform_ = null;\n            }\n        }\n    };\n    return MousePosition;\n}(Control));\nexport default MousePosition;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}