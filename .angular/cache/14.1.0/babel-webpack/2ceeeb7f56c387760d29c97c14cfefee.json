{"ast":null,"code":"/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\n\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\n\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\n\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\n\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}","map":{"version":3,"names":["toRadians","disable","rotation","undefined","none","createSnapToN","n","theta","Math","PI","opt_isMoving","floor","createSnapToZero","opt_tolerance","tolerance","abs"],"sources":["/home/asura/github/smartcity/node_modules/ol/rotationconstraint.js"],"sourcesContent":["/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,WAA1B;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA2B;EAC9B,IAAIA,QAAQ,KAAKC,SAAjB,EAA4B;IACxB,OAAO,CAAP;EACH,CAFD,MAGK;IACD,OAAOA,SAAP;EACH;AACJ;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcF,QAAd,EAAwB;EAC3B,IAAIA,QAAQ,KAAKC,SAAjB,EAA4B;IACxB,OAAOD,QAAP;EACH,CAFD,MAGK;IACD,OAAOC,SAAP;EACH;AACJ;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASE,aAAT,CAAuBC,CAAvB,EAA0B;EAC7B,IAAIC,KAAK,GAAI,IAAIC,IAAI,CAACC,EAAV,GAAgBH,CAA5B;EACA;IACA;AACJ;AACA;AACA;AACA;IACI,UAAUJ,QAAV,EAAoBQ,YAApB,EAAkC;MAC9B,IAAIA,YAAJ,EAAkB;QACd,OAAOR,QAAP;MACH;;MACD,IAAIA,QAAQ,KAAKC,SAAjB,EAA4B;QACxBD,QAAQ,GAAGM,IAAI,CAACG,KAAL,CAAWT,QAAQ,GAAGK,KAAX,GAAmB,GAA9B,IAAqCA,KAAhD;QACA,OAAOL,QAAP;MACH,CAHD,MAIK;QACD,OAAOC,SAAP;MACH;IACJ;EAjBD;AAkBH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASS,gBAAT,CAA0BC,aAA1B,EAAyC;EAC5C,IAAIC,SAAS,GAAGD,aAAa,IAAIb,SAAS,CAAC,CAAD,CAA1C;EACA;IACA;AACJ;AACA;AACA;AACA;IACI,UAAUE,QAAV,EAAoBQ,YAApB,EAAkC;MAC9B,IAAIA,YAAJ,EAAkB;QACd,OAAOR,QAAP;MACH;;MACD,IAAIA,QAAQ,KAAKC,SAAjB,EAA4B;QACxB,IAAIK,IAAI,CAACO,GAAL,CAASb,QAAT,KAAsBY,SAA1B,EAAqC;UACjC,OAAO,CAAP;QACH,CAFD,MAGK;UACD,OAAOZ,QAAP;QACH;MACJ,CAPD,MAQK;QACD,OAAOC,SAAP;MACH;IACJ;EArBD;AAsBH"},"metadata":{},"sourceType":"module"}