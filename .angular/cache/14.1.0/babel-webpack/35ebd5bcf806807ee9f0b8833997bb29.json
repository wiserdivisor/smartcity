{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Extent\n */\n\n\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\n\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\n\nvar ExtentEvent =\n/** @class */\nfunction (_super) {\n  __extends(ExtentEvent, _super);\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n\n\n  function ExtentEvent(extent) {\n    var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n\n\n    _this.extent = extent;\n    return _this;\n  }\n\n  return ExtentEvent;\n}(Event);\n\nexport { ExtentEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\n\nvar Extent =\n/** @class */\nfunction (_super) {\n  __extends(Extent, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Extent(opt_options) {\n    var _this = this;\n\n    var options = opt_options || {};\n    _this = _super.call(this,\n    /** @type {import(\"./Pointer.js\").Options} */\n    options) || this;\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n\n    _this.condition_ = options.condition ? options.condition : always;\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n\n    _this.extent_ = null;\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n\n    _this.pointerHandler_ = null;\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n\n    _this.snappedToVertex_ = false;\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n\n    _this.extentFeature_ = null;\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n\n    _this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n\n\n    _this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n\n    _this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      _this.setExtent(opt_options.extent);\n    }\n\n    return _this;\n  }\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n\n\n  Extent.prototype.snapToVertex_ = function (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n\n    var sortByDistance = function (a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) - squaredDistanceToSegment(pixelCoordinate, b);\n    };\n\n    var extent = this.getExtentInternal();\n\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n      var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      var vertexPixel = map.getPixelFromCoordinateInternal(vertex); //if the distance is within tolerance, snap to the segment\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n\n        return vertex;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n\n\n  Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var vertex = this.snapToVertex_(pixel, map);\n\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n\n\n  Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n\n    return extentFeature;\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n\n\n  Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n    var vertexFeature = this.vertexFeature_;\n\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n\n    return vertexFeature;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n\n\n  Extent.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    } //display pointer (if not dragging)\n\n\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    } //call pointer to determine up/down/drag\n\n\n    _super.prototype.handleEvent.call(this, mapBrowserEvent); //return false to stop propagation\n\n\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var extent = this.getExtentInternal();\n    var vertex = this.snapToVertex_(pixel, map); //find the extent corner opposite the passed corner\n\n    var getOpposingPoint = function (point) {\n      var x_ = null;\n      var y_ = null;\n\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n\n      return null;\n    };\n\n    if (vertex && extent) {\n      var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null; //snap to point\n\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex)); //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n      } //no snap - new bbox\n\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n\n    return true; //event handled; start downup sequence\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n    this.pointerHandler_ = null; //If bbox is zero area, set to null;\n\n    var extent = this.getExtentInternal();\n\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n\n    return false; //Stop handling downup sequence\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  Extent.prototype.setMap = function (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n\n    _super.prototype.setMap.call(this, map);\n  };\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n\n\n  Extent.prototype.getExtent = function () {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  };\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n\n\n  Extent.prototype.getExtentInternal = function () {\n    return this.extent_;\n  };\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n\n\n  Extent.prototype.setExtent = function (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  };\n\n  return Extent;\n}(PointerInteraction);\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\n\n\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\n\n\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\n\n\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\n\n\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\n\n\nfunction getSegments(extent) {\n  return [[[extent[0], extent[1]], [extent[0], extent[3]]], [[extent[0], extent[3]], [extent[2], extent[3]]], [[extent[2], extent[3]], [extent[2], extent[1]]], [[extent[2], extent[1]], [extent[0], extent[1]]]];\n}\n\nexport default Extent;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Event","Feature","MapBrowserEventType","Point","PointerInteraction","VectorLayer","VectorSource","always","boundingExtent","getArea","closestOnSegment","distance","coordinateDistance","squaredDistance","squaredCoordinateDistance","squaredDistanceToSegment","createEditingStyle","fromExtent","polygonFromExtent","toUserExtent","ExtentEventType","EXTENTCHANGED","ExtentEvent","_super","extent","_this","Extent","opt_options","options","on","once","un","condition_","condition","extent_","pointerHandler_","pixelTolerance_","pixelTolerance","undefined","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","source","useSpatialIndex","wrapX","style","boxStyle","getDefaultExtentStyleFunction","updateWhileAnimating","updateWhileInteracting","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","snapToVertex_","pixel","map","pixelCoordinate","getCoordinateFromPixelInternal","sortByDistance","a","getExtentInternal","segments","getSegments","sort","closestSegment","vertex","vertexPixel","getPixelFromCoordinateInternal","pixel1","pixel2","squaredDist1","squaredDist2","dist","Math","sqrt","min","handlePointerMove_","mapBrowserEvent","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","getSource","addFeature","setGeometry","vertexFeature","geometry","getGeometry","setCoordinates","handleEvent","originalEvent","type","POINTERMOVE","handlingDownUpSequence","handleDownEvent","getOpposingPoint","point","x_","y_","x","y","getPointHandler","getEdgeHandler","handleDragEvent","coordinate","handleUpEvent","setMap","getExtent","getMap","getView","getProjection","dispatchEvent","feature","resolution","fixedPoint","fixedP1","fixedP2"],"sources":["/home/asura/github/smartcity/node_modules/ol/interaction/Extent.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\nexport { ExtentEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ExtentOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * Condition\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.boxStyle\n                ? opt_options.boxStyle\n                : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.pointerStyle\n                ? opt_options.pointerStyle\n                : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n        var sortByDistance = function (a, b) {\n            return (squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b));\n        };\n        var extent = this.getExtentInternal();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex =\n                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @return {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @return {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtentInternal();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtentInternal();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection (or user projection if set)\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtentInternal = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style['Polygon'];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style['Point'];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [\n            [extent[0], extent[1]],\n            [extent[0], extent[3]],\n        ],\n        [\n            [extent[0], extent[3]],\n            [extent[2], extent[3]],\n        ],\n        [\n            [extent[2], extent[3]],\n            [extent[2], extent[1]],\n        ],\n        [\n            [extent[2], extent[1]],\n            [extent[0], extent[1]],\n        ],\n    ];\n}\nexport default Extent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}