{"ast":null,"code":"/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\n\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\n\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\n\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\n\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\n\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    var circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\n\n\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n  var loading = false;\n  var imageStyle = style.getImage();\n\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n  return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n  var geometry = style.getGeometryFunction()(feature);\n\n  if (!geometry) {\n    return;\n  }\n\n  var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n  var renderer = style.getRenderer();\n\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    var geometries =\n    /** @type {import(\"../geom/GeometryCollection.js\").default} */\n    geometry.getGeometries();\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n\n    return;\n  }\n\n  var replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n  /** @type {import(\"../geom/SimpleGeometry.js\").default} */\n  geometry, feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n\n  var declutterImageWithText;\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    var imageBuilderGroup = builderGroup;\n\n    if (opt_declutterBuilderGroup) {\n      var declutterMode = imageStyle.getDeclutterMode();\n\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          var imageReplay_1 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n          imageReplay_1.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay_1.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n\n    var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n\n  if (textStyle && textStyle.getText()) {\n    var textBuilderGroup = builderGroup;\n\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n\n    var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n\n  var declutterImageWithText;\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    var imageBuilderGroup = builderGroup;\n\n    if (opt_declutterBuilderGroup) {\n      var declutterMode = imageStyle.getDeclutterMode();\n\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          var imageReplay_2 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n          imageReplay_2.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay_2.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n\n    var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n\n  if (textStyle && textStyle.getText()) {\n    var textBuilderGroup = builderGroup;\n\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n\n    var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}","map":{"version":3,"names":["ImageState","getUid","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","resolution","pixelRatio","tolerance","getTolerance","builderGroup","geometry","style","feature","opt_declutterBuilderGroup","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getBuilder","getZIndex","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","setTextStyle","drawText","renderFeature","replayGroup","squaredTolerance","listener","opt_transform","loading","imageStyle","getImage","imageState","getImageState","LOADED","ERROR","unlistenImageChange","IDLE","load","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderer","getRenderer","renderGeometry","geometryRenderer","getType","geometries","getGeometries","i","ii","length","replay","drawCustom","getHitDetectionRenderer","getGeometriesArray","lineStringReplay","drawLineString","drawMultiLineString","polygonReplay","drawMultiPolygon","declutterImageWithText","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay_1","setImageStyle","drawPoint","imageReplay","textBuilderGroup","imageReplay_2","drawMultiPoint","drawPolygon"],"sources":["/home/asura/github/smartcity/node_modules/ol/renderer/vector.js"],"sourcesContent":["/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == 'GeometryCollection') {\n        var geometries = \n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            var declutterMode = imageStyle.getDeclutterMode();\n            if (declutterMode !== 'none') {\n                imageBuilderGroup = opt_declutterBuilderGroup;\n                if (declutterMode === 'obstacle') {\n                    // draw in non-declutter group:\n                    var imageReplay_1 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n                    imageReplay_1.setImageStyle(imageStyle, declutterImageWithText);\n                    imageReplay_1.drawPoint(geometry, feature);\n                }\n                else if (textStyle && textStyle.getText()) {\n                    declutterImageWithText = {};\n                }\n            }\n        }\n        var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            textBuilderGroup = opt_declutterBuilderGroup;\n        }\n        var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            var declutterMode = imageStyle.getDeclutterMode();\n            if (declutterMode !== 'none') {\n                imageBuilderGroup = opt_declutterBuilderGroup;\n                if (declutterMode === 'obstacle') {\n                    // draw in non-declutter group:\n                    var imageReplay_2 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n                    imageReplay_2.setImageStyle(imageStyle, declutterImageWithText);\n                    imageReplay_2.drawMultiPoint(geometry, feature);\n                }\n                else if (textStyle && textStyle.getText()) {\n                    declutterImageWithText = {};\n                }\n            }\n        }\n        var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            textBuilderGroup = opt_declutterBuilderGroup;\n        }\n        var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}