{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\n\n\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\n\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\n\nvar DragBoxEvent =\n/** @class */\nfunction (_super) {\n  __extends(DragBoxEvent, _super);\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n\n\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n\n\n    _this.coordinate = coordinate;\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n\n  return DragBoxEvent;\n}(Event);\n\nexport { DragBoxEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\n\nvar DragBox =\n/** @class */\nfunction (_super) {\n  __extends(DragBox, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function DragBox(opt_options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n\n    _this.un;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n\n    _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      _this.onBoxEnd = options.onBoxEnd;\n    }\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n\n\n    _this.startPixel_ = null;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.condition_ = options.condition ? options.condition : mouseActionButton;\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n\n    _this.boxEndCondition_ = options.boxEndCondition ? options.boxEndCondition : _this.defaultBoxEndCondition;\n    return _this;\n  }\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n\n\n  DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n\n\n  DragBox.prototype.getGeometry = function () {\n    return this.box_.getGeometry();\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n    this.box_.setMap(null);\n    var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n\n    this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n\n\n  DragBox.prototype.onBoxEnd = function (event) {};\n\n  return DragBox;\n}(PointerInteraction);\n\nexport default DragBox;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Event","PointerInteraction","RenderBox","mouseActionButton","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","_super","type","coordinate","mapBrowserEvent","_this","DragBox","opt_options","on","once","un","options","box_","className","minArea_","minArea","undefined","onBoxEnd","startPixel_","condition_","condition","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","width","height","getGeometry","handleDragEvent","setPixels","pixel","dispatchEvent","handleUpEvent","setMap","completeBox","handleDownEvent","map","event"],"sources":["/home/asura/github/smartcity/node_modules/ol/interaction/DragBox.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {DragBoxOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}