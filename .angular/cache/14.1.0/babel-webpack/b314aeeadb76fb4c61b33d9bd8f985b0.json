{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/style/Icon\n */\n\n\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\n\nvar Icon =\n/** @class */\nfunction (_super) {\n  __extends(Icon, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Icon(opt_options) {\n    var _this = this;\n\n    var options = opt_options || {};\n    /**\n     * @type {number}\n     */\n\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n    /**\n     * @type {number}\n     */\n\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n\n    var scale = options.scale !== undefined ? options.scale : 1;\n    /**\n     * @type {boolean}\n     */\n\n    var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n    _this = _super.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode\n    }) || this;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.normalizedAnchor_ = null;\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n\n    _this.anchorOrigin_ = options.anchorOrigin !== undefined ? options.anchorOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n\n    _this.anchorXUnits_ = options.anchorXUnits !== undefined ? options.anchorXUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n\n    _this.anchorYUnits_ = options.anchorYUnits !== undefined ? options.anchorYUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    var image = options.img !== undefined ? options.img : null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n\n    _this.imgSize_ = options.imgSize;\n    /**\n     * @type {string|undefined}\n     */\n\n    var src = options.src;\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n\n    assert(!image || image && _this.imgSize_, 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src =\n      /** @type {HTMLImageElement} */\n      image.src || getUid(image);\n    }\n\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n\n    var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n\n    _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n\n    _this.iconImage_ = getIconImage(image,\n    /** @type {string} */\n    src, _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n\n    _this.offsetOrigin_ = options.offsetOrigin !== undefined ? options.offsetOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.origin_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.size_ = options.size !== undefined ? options.size : null;\n    return _this;\n  }\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n\n\n  Icon.prototype.clone = function () {\n    var scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color: this.color_ && this.color_.slice ? this.color_.slice() : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode()\n    });\n  };\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n\n\n  Icon.prototype.getAnchor = function () {\n    var anchor = this.normalizedAnchor_;\n\n    if (!anchor) {\n      anchor = this.anchor_;\n      var size = this.getSize();\n\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION || this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        if (!size) {\n          return null;\n        }\n\n        anchor = this.anchor_.slice();\n\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n\n        if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n\n        if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n\n      this.normalizedAnchor_ = anchor;\n    }\n\n    var displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  };\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n\n\n  Icon.prototype.setAnchor = function (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n\n\n  Icon.prototype.getColor = function () {\n    return this.color_;\n  };\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n\n\n  Icon.prototype.getImage = function (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n\n\n  Icon.prototype.getPixelRatio = function (pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  Icon.prototype.getImageSize = function () {\n    return this.iconImage_.getSize();\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  Icon.prototype.getImageState = function () {\n    return this.iconImage_.getImageState();\n  };\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n\n\n  Icon.prototype.getHitDetectionImage = function () {\n    return this.iconImage_.getHitDetectionImage();\n  };\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n\n\n  Icon.prototype.getOrigin = function () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n\n      if (!size || !iconImageSize) {\n        return null;\n      }\n\n      offset = offset.slice();\n\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n\n    this.origin_ = offset;\n    return this.origin_;\n  };\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n\n\n  Icon.prototype.getSrc = function () {\n    return this.iconImage_.getSrc();\n  };\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n\n\n  Icon.prototype.getSize = function () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  Icon.prototype.listenImageChange = function (listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  };\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n\n\n  Icon.prototype.load = function () {\n    this.iconImage_.load();\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  Icon.prototype.unlistenImageChange = function (listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  };\n\n  return Icon;\n}(ImageStyle);\n\nexport default Icon;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","EventType","IconAnchorUnits","IconOrigin","ImageState","ImageStyle","asArray","assert","get","getIconImage","getUid","Icon","_super","opt_options","_this","options","opacity","undefined","rotation","scale","rotateWithView","displacement","declutterMode","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","TOP_LEFT","anchorXUnits_","anchorXUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","crossOrigin","image","img","imgSize_","imgSize","src","length","imageState","IDLE","LOADED","color_","color","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","origin_","size_","size","clone","getScale","slice","getOpacity","getRotateWithView","getRotation","isArray","getSrc","getDisplacement","getDeclutterMode","getAnchor","getSize","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","setAnchor","getColor","getImage","pixelRatio","getPixelRatio","getImageSize","getImageState","getHitDetectionImage","getOrigin","iconImageSize","listenImageChange","listener","addEventListener","CHANGE","load","unlistenImageChange","removeEventListener"],"sources":["/home/asura/github/smartcity/node_modules/ol/style/Icon.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n            declutterMode: options.declutterMode,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|undefined}\n         */\n        _this.imgSize_ = options.imgSize;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            crossOrigin: this.crossOrigin_,\n            imgSize: this.imgSize_,\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            opacity: this.getOpacity(),\n            rotateWithView: this.getRotateWithView(),\n            rotation: this.getRotation(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            src: this.getSrc(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        var anchor = this.normalizedAnchor_;\n        if (!anchor) {\n            anchor = this.anchor_;\n            var size = this.getSize();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                if (!size) {\n                    return null;\n                }\n                anchor = this.anchor_.slice();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[0] *= size[0];\n                }\n                if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[1] *= size[1];\n                }\n            }\n            if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                if (!size) {\n                    return null;\n                }\n                if (anchor === this.anchor_) {\n                    anchor = this.anchor_.slice();\n                }\n                if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[0] = -anchor[0] + size[0];\n                }\n                if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[1] = -anchor[1] + size[1];\n                }\n            }\n            this.normalizedAnchor_ = anchor;\n        }\n        var displacement = this.getDisplacement();\n        return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}