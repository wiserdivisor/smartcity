{"ast":null,"code":"/**\n * @module ol/source/Vector\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals, wrapAndSliceX } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\nvar VectorSourceEvent =\n/** @class */\nfunction (_super) {\n  __extends(VectorSourceEvent, _super);\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n\n\n  function VectorSourceEvent(type, opt_feature, opt_features) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n\n\n    _this.feature = opt_feature;\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n\n    _this.features = opt_features;\n    return _this;\n  }\n\n  return VectorSourceEvent;\n}(Event);\n\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\nvar VectorSource =\n/** @class */\nfunction (_super) {\n  __extends(VectorSource, _super);\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n\n\n  function VectorSource(opt_options) {\n    var _this = this;\n\n    var options = opt_options || {};\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    }) || this;\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n\n    _this.loader_ = VOID;\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n\n    _this.format_ = options.format;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n\n    _this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      _this.loader_ = options.loader;\n    } else if (_this.url_ !== undefined) {\n      assert(_this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n\n      _this.loader_ = xhr(_this.url_,\n      /** @type {import(\"../format/Feature.js\").default} */\n      _this.format_);\n    }\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n\n\n    _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n    var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n\n    _this.loadedExtentsRtree_ = new RBush();\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.loadingExtentsCount_ = 0;\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.nullGeometryFeatures_ = {};\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.idIndex_ = {};\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.uidIndex_ = {};\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n\n    _this.featureChangeKeys_ = {};\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n\n    _this.featuresCollection_ = null;\n    var collection, features;\n\n    if (Array.isArray(options.features)) {\n      features =\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n      options.features;\n    } else if (options.features) {\n      collection =\n      /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n      options.features;\n      features = collection.getArray();\n    }\n\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n\n    if (features !== undefined) {\n      _this.addFeaturesInternal(features);\n    }\n\n    if (collection !== undefined) {\n      _this.bindFeaturesCollection_(collection);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n\n\n  VectorSource.prototype.addFeature = function (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n\n\n  VectorSource.prototype.addFeatureInternal = function (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n    var geometry = feature.getGeometry();\n\n    if (geometry) {\n      var extent = geometry.getExtent();\n\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n\n\n  VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [listen(feature, EventType.CHANGE, this.handleFeatureChange_, this), listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)];\n  };\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n\n\n  VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n\n      this.uidIndex_[featureKey] = feature;\n    }\n\n    return valid;\n  };\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n\n\n  VectorSource.prototype.addFeatures = function (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n\n\n  VectorSource.prototype.addFeaturesInternal = function (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length_1 = features.length; i < length_1; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n      var feature = newFeatures[i];\n      var featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n      var geometry = feature.getGeometry();\n\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n      }\n    }\n  };\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n\n\n  VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n    var modifyingCollection = false;\n    this.addEventListener(VectorEventType.ADDFEATURE,\n    /**\n     * @param {VectorSourceEvent<Geometry>} evt The vector source event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n    this.addEventListener(VectorEventType.REMOVEFEATURE,\n    /**\n     * @param {VectorSourceEvent<Geometry>} evt The vector source event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n    collection.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(\n        /** @type {import(\"../Feature.js\").default<Geometry>} */\n        evt.element);\n        modifyingCollection = false;\n      }\n    }.bind(this));\n    collection.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(\n        /** @type {import(\"../Feature.js\").default<Geometry>} */\n        evt.element);\n        modifyingCollection = false;\n      }\n    }.bind(this));\n    this.featuresCollection_ = collection;\n  };\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n\n\n  VectorSource.prototype.clear = function (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        var removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n\n    this.nullGeometryFeatures_ = {};\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeature = function (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n\n\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      var geometry = feature.getGeometry();\n\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     */\n    function (feature) {\n      var geometry = feature.getGeometry();\n\n      if (geometry.intersectsExtent(extent)) {\n        var result = callback(feature);\n\n        if (result) {\n          return result;\n        }\n      }\n    });\n  };\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesCollection = function () {\n    return this.featuresCollection_;\n  };\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeatures = function () {\n    var features;\n\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n\n    return (\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n      features\n    );\n  };\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesInExtent = function (extent, opt_projection) {\n    var _this = this;\n\n    if (this.featuresRtree_) {\n      var multiWorld = opt_projection && opt_projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      var extents = wrapAndSliceX(extent, opt_projection);\n      return [].concat.apply([], extents.map(function (anExtent) {\n        return _this.featuresRtree_.getInExtent(anExtent);\n      }));\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n\n\n  VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     */\n    function (feature) {\n      if (filter(feature)) {\n        var geometry = feature.getGeometry();\n        var previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature; // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n\n          var minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n    return closestFeature;\n  };\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n\n\n  VectorSource.prototype.getExtent = function (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeatureById = function (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n\n\n  VectorSource.prototype.getFeatureByUid = function (uid) {\n    var feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  };\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFormat = function () {\n    return this.format_;\n  };\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n\n\n  VectorSource.prototype.getOverlaps = function () {\n    return this.overlaps_;\n  };\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n\n\n  VectorSource.prototype.getUrl = function () {\n    return this.url_;\n  };\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n\n\n  VectorSource.prototype.handleFeatureChange_ = function (event) {\n    var feature =\n    /** @type {import(\"../Feature.js\").default<Geometry>} */\n    event.target;\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      var sid = id.toString();\n\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n  };\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n\n\n  VectorSource.prototype.hasFeature = function (feature) {\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n\n\n  VectorSource.prototype.isEmpty = function () {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    }\n\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n\n    return true;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n\n\n  VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution, projection);\n\n    var _loop_1 = function (i, ii) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function (object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n\n      if (!alreadyLoaded) {\n        ++this_1.loadingExtentsCount_;\n        this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n        this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n          --this.loadingExtentsCount_;\n          this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n        }.bind(this_1), function () {\n          --this.loadingExtentsCount_;\n          this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n        }.bind(this_1));\n        loadedExtentsRtree.insert(extentToLoad, {\n          extent: extentToLoad.slice()\n        });\n      }\n    };\n\n    var this_1 = this;\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      _loop_1(i, ii);\n    }\n\n    this.loading = this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  };\n\n  VectorSource.prototype.refresh = function () {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n\n    _super.prototype.refresh.call(this);\n  };\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n\n\n  VectorSource.prototype.removeLoadedExtent = function (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n\n\n  VectorSource.prototype.removeFeature = function (feature) {\n    if (!feature) {\n      return;\n    }\n\n    var featureKey = getUid(feature);\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    var result = this.removeFeatureInternal(feature);\n\n    if (result) {\n      this.changed();\n    }\n  };\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n\n\n  VectorSource.prototype.removeFeatureInternal = function (feature) {\n    var featureKey = getUid(feature);\n    var featureChangeKeys = this.featureChangeKeys_[featureKey];\n\n    if (!featureChangeKeys) {\n      return;\n    }\n\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    return feature;\n  };\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n\n\n  VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n    var removed = false;\n\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n\n    return removed;\n  };\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n\n\n  VectorSource.prototype.setLoader = function (loader) {\n    this.loader_ = loader;\n  };\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n\n\n  VectorSource.prototype.setUrl = function (url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  };\n\n  return VectorSource;\n}(Source);\n\nexport default VectorSource;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Collection","CollectionEventType","Event","EventType","ObjectEventType","RBush","Source","VectorEventType","TRUE","VOID","all","allStrategy","assert","containsExtent","equals","wrapAndSliceX","extend","getUid","getValues","isEmpty","listen","unlistenByKey","xhr","VectorSourceEvent","_super","type","opt_feature","opt_features","_this","feature","features","VectorSource","opt_options","options","attributions","interpolate","projection","undefined","state","wrapX","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","url","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","collection","isArray","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","changed","featureKey","addToIndex_","remove","setupChangeEvents_","geometry","getGeometry","extent","getExtent","insert","dispatchEvent","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","addFeatures","extents","newFeatures","geometryFeatures","i","length_1","length","push","length_2","load","hasListener","length_3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","element","bind","REMOVE","removeFeature","clear","opt_fast","featureId","keys","forEach","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","callback","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","slice","getAll","getFeaturesAtCoordinate","getFeaturesInExtent","opt_projection","multiWorld","canWrapX","getWrapX","getInExtent","concat","apply","map","anExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","filter","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","opt_extent","getFeatureById","getFeatureByUid","uid","getFormat","getOverlaps","getUrl","event","target","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","_loop_1","ii","extentToLoad","alreadyLoaded","object","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","loading","refresh","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","setUrl"],"sources":["/home/asura/github/smartcity/node_modules/ol/source/Vector.js"],"sourcesContent":["/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals, wrapAndSliceX } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: true,\n            projection: undefined,\n            state: 'ready',\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features =\n                /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n        }\n        else if (options.features) {\n            collection =\n                /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        if (this.hasListener(VectorEventType.ADDFEATURE)) {\n            for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n            }\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                var removeAndIgnoreReturn = function (feature) {\n                    this.removeFeatureInternal(feature);\n                }.bind(this);\n                this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Include features\n     * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent, opt_projection) {\n        var _this = this;\n        if (this.featuresRtree_) {\n            var multiWorld = opt_projection && opt_projection.canWrapX() && this.getWrapX();\n            if (!multiWorld) {\n                return this.featuresRtree_.getInExtent(extent);\n            }\n            var extents = wrapAndSliceX(extent, opt_projection);\n            return [].concat.apply([], extents.map(function (anExtent) { return _this.featuresRtree_.getInExtent(anExtent); }));\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        if (this.featuresRtree_) {\n            return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n        }\n        if (this.featuresCollection_) {\n            return this.featuresCollection_.getLength() === 0;\n        }\n        return true;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        if (!feature) {\n            return;\n        }\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        var result = this.removeFeatureInternal(feature);\n        if (result) {\n            this.changed();\n        }\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        var featureChangeKeys = this.featureChangeKeys_[featureKey];\n        if (!featureChangeKeys) {\n            return;\n        }\n        featureChangeKeys.forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n        return feature;\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;MAAEC,SAAS,EAAE;IAAb,aAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;MAAED,CAAC,CAACI,SAAF,GAAcH,CAAd;IAAkB,CAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;MAAE,KAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IAAc,CAFrG;;IAGA,OAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;EACH,CALD;;EAMA,OAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;IACnB,IAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;IACJF,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;IACA,SAASW,EAAT,GAAc;MAAE,KAAKC,WAAL,GAAmBb,CAAnB;IAAuB;;IACvCA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;EACH,CAND;AAOH,CAd2C,EAA5C;;AAeA,OAAOG,UAAP,MAAuB,kBAAvB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,GAAG,IAAIC,WAAhB,QAAmC,uBAAnC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,cAAT,EAAyBC,MAAzB,EAAiCC,aAAjC,QAAsD,cAAtD;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,WAAnC;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,cAAtC;AACA,SAASC,GAAT,QAAoB,qBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACrDzC,SAAS,CAACwC,iBAAD,EAAoBC,MAApB,CAAT;EACA;AACJ;AACA;AACA;AACA;;;EACI,SAASD,iBAAT,CAA2BE,IAA3B,EAAiCC,WAAjC,EAA8CC,YAA9C,EAA4D;IACxD,IAAIC,KAAK,GAAGJ,MAAM,CAAC9B,IAAP,CAAY,IAAZ,EAAkB+B,IAAlB,KAA2B,IAAvC;IACA;AACR;AACA;AACA;AACA;;;IACQG,KAAK,CAACC,OAAN,GAAgBH,WAAhB;IACA;AACR;AACA;AACA;AACA;;IACQE,KAAK,CAACE,QAAN,GAAiBH,YAAjB;IACA,OAAOC,KAAP;EACH;;EACD,OAAOL,iBAAP;AACH,CAxBsC,CAwBrCrB,KAxBqC,CAAvC;;AAyBA,SAASqB,ie,UAAUP,MAAV,EAAkB;EAChDzC,SAAS,CAACgD,YAAD,EAAeP,MAAf,CAAT;EACA;AACJ;AACA;;;EACI,SAASO,YAAT,CAAsBC,WAAtB,EAAmC;IAC/B,IAAIJ,KAAK,GAAG,IAAZ;;IACA,IAAIK,OAAO,GAAGD,WAAW,IAAI,EAA7B;IACAJ,KAAK,GAAGJ,MAAM,CAAC9B,IAAP,CAAY,IAAZ,EAAkB;MACtBwC,YAAY,EAAED,OAAO,CAACC,YADA;MAEtBC,WAAW,EAAE,IAFS;MAGtBC,UAAU,EAAEC,SAHU;MAItBC,KAAK,EAAE,OAJe;MAKtBC,KAAK,EAAEN,OAAO,CAACM,KAAR,KAAkBF,SAAlB,GAA8BJ,OAAO,CAACM,KAAtC,GAA8C;IAL/B,CAAlB,KAMF,IANN;IAOA;AACR;AACA;;IACQX,KAAK,CAACY,EAAN;IACA;AACR;AACA;;IACQZ,KAAK,CAACa,IAAN;IACA;AACR;AACA;;IACQb,KAAK,CAACc,EAAN;IACA;AACR;AACA;AACA;;IACQd,KAAK,CAACe,OAAN,GAAgBlC,IAAhB;IACA;AACR;AACA;AACA;;IACQmB,KAAK,CAACgB,OAAN,GAAgBX,OAAO,CAACY,MAAxB;IACA;AACR;AACA;AACA;;IACQjB,KAAK,CAACkB,SAAN,GAAkBb,OAAO,CAACc,QAAR,KAAqBV,SAArB,GAAiC,IAAjC,GAAwCJ,OAAO,CAACc,QAAlE;IACA;AACR;AACA;AACA;;IACQnB,KAAK,CAACoB,IAAN,GAAaf,OAAO,CAACgB,GAArB;;IACA,IAAIhB,OAAO,CAACiB,MAAR,KAAmBb,SAAvB,EAAkC;MAC9BT,KAAK,CAACe,OAAN,GAAgBV,OAAO,CAACiB,MAAxB;IACH,CAFD,MAGK,IAAItB,KAAK,CAACoB,IAAN,KAAeX,SAAnB,EAA8B;MAC/BzB,MAAM,CAACgB,KAAK,CAACgB,OAAP,EAAgB,CAAhB,CAAN,CAD+B,CACL;MAC1B;;MACAhB,KAAK,CAACe,OAAN,GAAgBrB,GAAG,CAACM,KAAK,CAACoB,IAAP;MACnB;MAAuDpB,KAAK,CAACgB,OAD1C,CAAnB;IAEH;IACD;AACR;AACA;AACA;;;IACQhB,KAAK,CAACuB,SAAN,GACIlB,OAAO,CAACmB,QAAR,KAAqBf,SAArB,GAAiCJ,OAAO,CAACmB,QAAzC,GAAoDzC,WADxD;IAEA,IAAI0C,eAAe,GAAGpB,OAAO,CAACoB,eAAR,KAA4BhB,SAA5B,GAAwCJ,OAAO,CAACoB,eAAhD,GAAkE,IAAxF;IACA;AACR;AACA;AACA;;IACQzB,KAAK,CAAC0B,cAAN,GAAuBD,eAAe,GAAG,IAAIhD,KAAJ,EAAH,GAAiB,IAAvD;IACA;AACR;AACA;AACA;;IACQuB,KAAK,CAAC2B,mBAAN,GAA4B,IAAIlD,KAAJ,EAA5B;IACA;AACR;AACA;AACA;;IACQuB,KAAK,CAAC4B,oBAAN,GAA6B,CAA7B;IACA;AACR;AACA;AACA;;IACQ5B,KAAK,CAAC6B,qBAAN,GAA8B,EAA9B;IACA;AACR;AACA;AACA;AACA;;IACQ7B,KAAK,CAAC8B,QAAN,GAAiB,EAAjB;IACA;AACR;AACA;AACA;AACA;;IACQ9B,KAAK,CAAC+B,SAAN,GAAkB,EAAlB;IACA;AACR;AACA;AACA;;IACQ/B,KAAK,CAACgC,kBAAN,GAA2B,EAA3B;IACA;AACR;AACA;AACA;;IACQhC,KAAK,CAACiC,mBAAN,GAA4B,IAA5B;IACA,IAAIC,UAAJ,EAAgBhC,QAAhB;;IACA,IAAIxC,KAAK,CAACyE,OAAN,CAAc9B,OAAO,CAACH,QAAtB,CAAJ,EAAqC;MACjCA,QAAQ;MACJ;MAAiEG,OAAO,CAACH,QAD7E;IAEH,CAHD,MAIK,IAAIG,OAAO,CAACH,QAAZ,EAAsB;MACvBgC,UAAU;MACN;MAAsE7B,OAAO,CAACH,QADlF;MAEAA,QAAQ,GAAGgC,UAAU,CAACE,QAAX,EAAX;IACH;;IACD,IAAI,CAACX,eAAD,IAAoBS,UAAU,KAAKzB,SAAvC,EAAkD;MAC9CyB,UAAU,GAAG,IAAI9D,UAAJ,CAAe8B,QAAf,CAAb;IACH;;IACD,IAAIA,QAAQ,KAAKO,SAAjB,EAA4B;MACxBT,KAAK,CAACqC,mBAAN,CAA0BnC,QAA1B;IACH;;IACD,IAAIgC,UAAU,KAAKzB,SAAnB,EAA8B;MAC1BT,KAAK,CAACsC,uBAAN,CAA8BJ,UAA9B;IACH;;IACD,OAAOlC,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIG,YAAY,CAACvC,SAAb,CAAuB2E,UAAvB,GAAoC,UAAUtC,OAAV,EAAmB;IACnD,KAAKuC,kBAAL,CAAwBvC,OAAxB;IACA,KAAKwC,OAAL;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;;;EACItC,YAAY,CAACvC,SAAb,CAAuB4E,kBAAvB,GAA4C,UAAUvC,OAAV,EAAmB;IAC3D,IAAIyC,UAAU,GAAGrD,MAAM,CAACY,OAAD,CAAvB;;IACA,IAAI,CAAC,KAAK0C,WAAL,CAAiBD,UAAjB,EAA6BzC,OAA7B,CAAL,EAA4C;MACxC,IAAI,KAAKgC,mBAAT,EAA8B;QAC1B,KAAKA,mBAAL,CAAyBW,MAAzB,CAAgC3C,OAAhC;MACH;;MACD;IACH;;IACD,KAAK4C,kBAAL,CAAwBH,UAAxB,EAAoCzC,OAApC;IACA,IAAI6C,QAAQ,GAAG7C,OAAO,CAAC8C,WAAR,EAAf;;IACA,IAAID,QAAJ,EAAc;MACV,IAAIE,MAAM,GAAGF,QAAQ,CAACG,SAAT,EAAb;;MACA,IAAI,KAAKvB,cAAT,EAAyB;QACrB,KAAKA,cAAL,CAAoBwB,MAApB,CAA2BF,MAA3B,EAAmC/C,OAAnC;MACH;IACJ,CALD,MAMK;MACD,KAAK4B,qBAAL,CAA2Ba,UAA3B,IAAyCzC,OAAzC;IACH;;IACD,KAAKkD,aAAL,CAAmB,IAAIxD,iBAAJ,CAAsBhB,eAAe,CAACyE,UAAtC,EAAkDnD,OAAlD,CAAnB;EACH,CApBD;EAqBA;AACJ;AACA;AACA;AACA;;;EACIE,YAAY,CAACvC,SAAb,CAAuBiF,kBAAvB,GAA4C,UAAUH,UAAV,EAAsBzC,OAAtB,EAA+B;IACvE,KAAK+B,kBAAL,CAAwBU,UAAxB,IAAsC,CAClClD,MAAM,CAACS,OAAD,EAAU1B,SAAS,CAAC8E,MAApB,EAA4B,KAAKC,oBAAjC,EAAuD,IAAvD,CAD4B,EAElC9D,MAAM,CAACS,OAAD,EAAUzB,eAAe,CAAC+E,cAA1B,EAA0C,KAAKD,oBAA/C,EAAqE,IAArE,CAF4B,CAAtC;EAIH,CALD;EAMA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACInD,YAAY,CAACvC,SAAb,CAAuB+E,WAAvB,GAAqC,UAAUD,UAAV,EAAsBzC,OAAtB,EAA+B;IAChE,IAAIuD,KAAK,GAAG,IAAZ;IACA,IAAIC,EAAE,GAAGxD,OAAO,CAACyD,KAAR,EAAT;;IACA,IAAID,EAAE,KAAKhD,SAAX,EAAsB;MAClB,IAAI,EAAEgD,EAAE,CAACE,QAAH,MAAiB,KAAK7B,QAAxB,CAAJ,EAAuC;QACnC,KAAKA,QAAL,CAAc2B,EAAE,CAACE,QAAH,EAAd,IAA+B1D,OAA/B;MACH,CAFD,MAGK;QACDuD,KAAK,GAAG,KAAR;MACH;IACJ;;IACD,IAAIA,KAAJ,EAAW;MACPxE,MAAM,CAAC,EAAE0D,UAAU,IAAI,KAAKX,SAArB,CAAD,EAAkC,EAAlC,CAAN,CADO,CACsC;;MAC7C,KAAKA,SAAL,CAAeW,UAAf,IAA6BzC,OAA7B;IACH;;IACD,OAAOuD,KAAP;EACH,CAhBD;EAiBA;AACJ;AACA;AACA;AACA;;;EACIrD,YAAY,CAACvC,SAAb,CAAuBgG,WAAvB,GAAqC,UAAU1D,QAAV,EAAoB;IACrD,KAAKmC,mBAAL,CAAyBnC,QAAzB;IACA,KAAKuC,OAAL;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;;;EACItC,YAAY,CAACvC,SAAb,CAAuByE,mBAAvB,GAA6C,UAAUnC,QAAV,EAAoB;IAC7D,IAAI2D,OAAO,GAAG,EAAd;IACA,IAAIC,WAAW,GAAG,EAAlB;IACA,IAAIC,gBAAgB,GAAG,EAAvB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,QAAQ,GAAG/D,QAAQ,CAACgE,MAApC,EAA4CF,CAAC,GAAGC,QAAhD,EAA0DD,CAAC,EAA3D,EAA+D;MAC3D,IAAI/D,OAAO,GAAGC,QAAQ,CAAC8D,CAAD,CAAtB;MACA,IAAItB,UAAU,GAAGrD,MAAM,CAACY,OAAD,CAAvB;;MACA,IAAI,KAAK0C,WAAL,CAAiBD,UAAjB,EAA6BzC,OAA7B,CAAJ,EAA2C;QACvC6D,WAAW,CAACK,IAAZ,CAAiBlE,OAAjB;MACH;IACJ;;IACD,KAAK,IAAI+D,CAAC,GAAG,CAAR,EAAWI,QAAQ,GAAGN,WAAW,CAACI,MAAvC,EAA+CF,CAAC,GAAGI,QAAnD,EAA6DJ,CAAC,EAA9D,EAAkE;MAC9D,IAAI/D,OAAO,GAAG6D,WAAW,CAACE,CAAD,CAAzB;MACA,IAAItB,UAAU,GAAGrD,MAAM,CAACY,OAAD,CAAvB;MACA,KAAK4C,kBAAL,CAAwBH,UAAxB,EAAoCzC,OAApC;MACA,IAAI6C,QAAQ,GAAG7C,OAAO,CAAC8C,WAAR,EAAf;;MACA,IAAID,QAAJ,EAAc;QACV,IAAIE,MAAM,GAAGF,QAAQ,CAACG,SAAT,EAAb;QACAY,OAAO,CAACM,IAAR,CAAanB,MAAb;QACAe,gBAAgB,CAACI,IAAjB,CAAsBlE,OAAtB;MACH,CAJD,MAKK;QACD,KAAK4B,qBAAL,CAA2Ba,UAA3B,IAAyCzC,OAAzC;MACH;IACJ;;IACD,IAAI,KAAKyB,cAAT,EAAyB;MACrB,KAAKA,cAAL,CAAoB2C,IAApB,CAAyBR,OAAzB,EAAkCE,gBAAlC;IACH;;IACD,IAAI,KAAKO,WAAL,CAAiB3F,eAAe,CAACyE,UAAjC,CAAJ,EAAkD;MAC9C,KAAK,IAAIY,CAAC,GAAG,CAAR,EAAWO,QAAQ,GAAGT,WAAW,CAACI,MAAvC,EAA+CF,CAAC,GAAGO,QAAnD,EAA6DP,CAAC,EAA9D,EAAkE;QAC9D,KAAKb,aAAL,CAAmB,IAAIxD,iBAAJ,CAAsBhB,eAAe,CAACyE,UAAtC,EAAkDU,WAAW,CAACE,CAAD,CAA7D,CAAnB;MACH;IACJ;EACJ,CAjCD;EAkCA;AACJ;AACA;AACA;;;EACI7D,YAAY,CAACvC,SAAb,CAAuB0E,uBAAvB,GAAiD,UAAUJ,UAAV,EAAsB;IACnE,IAAIsC,mBAAmB,GAAG,KAA1B;IACA,KAAKC,gBAAL,CAAsB9F,eAAe,CAACyE,UAAtC;IACA;AACR;AACA;IACQ,UAAUsB,GAAV,EAAe;MACX,IAAI,CAACF,mBAAL,EAA0B;QACtBA,mBAAmB,GAAG,IAAtB;QACAtC,UAAU,CAACiC,IAAX,CAAgBO,GAAG,CAACzE,OAApB;QACAuE,mBAAmB,GAAG,KAAtB;MACH;IACJ,CAVD;IAWA,KAAKC,gBAAL,CAAsB9F,eAAe,CAACgG,aAAtC;IACA;AACR;AACA;IACQ,UAAUD,GAAV,EAAe;MACX,IAAI,CAACF,mBAAL,EAA0B;QACtBA,mBAAmB,GAAG,IAAtB;QACAtC,UAAU,CAACU,MAAX,CAAkB8B,GAAG,CAACzE,OAAtB;QACAuE,mBAAmB,GAAG,KAAtB;MACH;IACJ,CAVD;IAWAtC,UAAU,CAACuC,gBAAX,CAA4BpG,mBAAmB,CAACuG,GAAhD;IACA;AACR;AACA;IACQ,UAAUF,GAAV,EAAe;MACX,IAAI,CAACF,mBAAL,EAA0B;QACtBA,mBAAmB,GAAG,IAAtB;QACA,KAAKjC,UAAL;QACA;QAA0DmC,GAAG,CAACG,OAD9D;QAEAL,mBAAmB,GAAG,KAAtB;MACH;IACJ,CAPD,CAOEM,IAPF,CAOO,IAPP,CAJA;IAYA5C,UAAU,CAACuC,gBAAX,CAA4BpG,mBAAmB,CAAC0G,MAAhD;IACA;AACR;AACA;IACQ,UAAUL,GAAV,EAAe;MACX,IAAI,CAACF,mBAAL,EAA0B;QACtBA,mBAAmB,GAAG,IAAtB;QACA,KAAKQ,aAAL;QACA;QAA0DN,GAAG,CAACG,OAD9D;QAEAL,mBAAmB,GAAG,KAAtB;MACH;IACJ,CAPD,CAOEM,IAPF,CAOO,IAPP,CAJA;IAYA,KAAK7C,mBAAL,GAA2BC,UAA3B;EACH,CAjDD;EAkDA;AACJ;AACA;AACA;AACA;;;EACI/B,YAAY,CAACvC,SAAb,CAAuBqH,KAAvB,GAA+B,UAAUC,QAAV,EAAoB;IAC/C,IAAIA,QAAJ,EAAc;MACV,KAAK,IAAIC,SAAT,IAAsB,KAAKnD,kBAA3B,EAA+C;QAC3C,IAAIoD,IAAI,GAAG,KAAKpD,kBAAL,CAAwBmD,SAAxB,CAAX;QACAC,IAAI,CAACC,OAAL,CAAa5F,aAAb;MACH;;MACD,IAAI,CAAC,KAAKwC,mBAAV,EAA+B;QAC3B,KAAKD,kBAAL,GAA0B,EAA1B;QACA,KAAKF,QAAL,GAAgB,EAAhB;QACA,KAAKC,SAAL,GAAiB,EAAjB;MACH;IACJ,CAVD,MAWK;MACD,IAAI,KAAKL,cAAT,EAAyB;QACrB,IAAI4D,qBAAqB,GAAG,UAAUrF,OAAV,EAAmB;UAC3C,KAAKsF,qBAAL,CAA2BtF,OAA3B;QACH,CAF2B,CAE1B6E,IAF0B,CAErB,IAFqB,CAA5B;;QAGA,KAAKpD,cAAL,CAAoB2D,OAApB,CAA4BC,qBAA5B;;QACA,KAAK,IAAI7B,EAAT,IAAe,KAAK5B,qBAApB,EAA2C;UACvC,KAAK0D,qBAAL,CAA2B,KAAK1D,qBAAL,CAA2B4B,EAA3B,CAA3B;QACH;MACJ;IACJ;;IACD,IAAI,KAAKxB,mBAAT,EAA8B;MAC1B,KAAKA,mBAAL,CAAyBgD,KAAzB;IACH;;IACD,IAAI,KAAKvD,cAAT,EAAyB;MACrB,KAAKA,cAAL,CAAoBuD,KAApB;IACH;;IACD,KAAKpD,qBAAL,GAA6B,EAA7B;IACA,IAAI2D,UAAU,GAAG,IAAI7F,iBAAJ,CAAsBhB,eAAe,CAAC8G,KAAtC,CAAjB;IACA,KAAKtC,aAAL,CAAmBqC,UAAnB;IACA,KAAK/C,OAAL;EACH,CAjCD;EAkCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACItC,YAAY,CAACvC,SAAb,CAAuB8H,cAAvB,GAAwC,UAAUC,QAAV,EAAoB;IACxD,IAAI,KAAKjE,cAAT,EAAyB;MACrB,OAAO,KAAKA,cAAL,CAAoB2D,OAApB,CAA4BM,QAA5B,CAAP;IACH,CAFD,MAGK,IAAI,KAAK1D,mBAAT,EAA8B;MAC/B,KAAKA,mBAAL,CAAyBoD,OAAzB,CAAiCM,QAAjC;IACH;EACJ,CAPD;EAQA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIxF,YAAY,CAACvC,SAAb,CAAuBgI,gCAAvB,GAA0D,UAAUC,UAAV,EAAsBF,QAAtB,EAAgC;IACtF,IAAI3C,MAAM,GAAG,CAAC6C,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAA1B,EAA+BA,UAAU,CAAC,CAAD,CAAzC,EAA8CA,UAAU,CAAC,CAAD,CAAxD,CAAb;IACA,OAAO,KAAKC,sBAAL,CAA4B9C,MAA5B,EAAoC,UAAU/C,OAAV,EAAmB;MAC1D,IAAI6C,QAAQ,GAAG7C,OAAO,CAAC8C,WAAR,EAAf;;MACA,IAAID,QAAQ,CAACiD,oBAAT,CAA8BF,UAA9B,CAAJ,EAA+C;QAC3C,OAAOF,QAAQ,CAAC1F,OAAD,CAAf;MACH,CAFD,MAGK;QACD,OAAOQ,SAAP;MACH;IACJ,CARM,CAAP;EASH,CAXD;EAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIN,YAAY,CAACvC,SAAb,CAAuBkI,sBAAvB,GAAgD,UAAU9C,MAAV,EAAkB2C,QAAlB,EAA4B;IACxE,IAAI,KAAKjE,cAAT,EAAyB;MACrB,OAAO,KAAKA,cAAL,CAAoBsE,eAApB,CAAoChD,MAApC,EAA4C2C,QAA5C,CAAP;IACH,CAFD,MAGK,IAAI,KAAK1D,mBAAT,EAA8B;MAC/B,KAAKA,mBAAL,CAAyBoD,OAAzB,CAAiCM,QAAjC;IACH;EACJ,CAPD;EAQA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIxF,YAAY,CAACvC,SAAb,CAAuBqI,gCAAvB,GAA0D,UAAUjD,MAAV,EAAkB2C,QAAlB,EAA4B;IAClF,OAAO,KAAKG,sBAAL,CAA4B9C,MAA5B;IACP;AACR;AACA;AACA;IACQ,UAAU/C,OAAV,EAAmB;MACf,IAAI6C,QAAQ,GAAG7C,OAAO,CAAC8C,WAAR,EAAf;;MACA,IAAID,QAAQ,CAACoD,gBAAT,CAA0BlD,MAA1B,CAAJ,EAAuC;QACnC,IAAImD,MAAM,GAAGR,QAAQ,CAAC1F,OAAD,CAArB;;QACA,IAAIkG,MAAJ,EAAY;UACR,OAAOA,MAAP;QACH;MACJ;IACJ,CAbM,CAAP;EAcH,CAfD;EAgBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIhG,YAAY,CAACvC,SAAb,CAAuBwI,qBAAvB,GAA+C,YAAY;IACvD,OAAO,KAAKnE,mBAAZ;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;;;EACI9B,YAAY,CAACvC,SAAb,CAAuByI,WAAvB,GAAqC,YAAY;IAC7C,IAAInG,QAAJ;;IACA,IAAI,KAAK+B,mBAAT,EAA8B;MAC1B/B,QAAQ,GAAG,KAAK+B,mBAAL,CAAyBG,QAAzB,GAAoCkE,KAApC,CAA0C,CAA1C,CAAX;IACH,CAFD,MAGK,IAAI,KAAK5E,cAAT,EAAyB;MAC1BxB,QAAQ,GAAG,KAAKwB,cAAL,CAAoB6E,MAApB,EAAX;;MACA,IAAI,CAAChH,OAAO,CAAC,KAAKsC,qBAAN,CAAZ,EAA0C;QACtCzC,MAAM,CAACc,QAAD,EAAWZ,SAAS,CAAC,KAAKuC,qBAAN,CAApB,CAAN;MACH;IACJ;;IACD;MAAO;MAAiE3B;IAAxE;EACH,CAZD;EAaA;AACJ;AACA;AACA;AACA;AACA;;;EACIC,YAAY,CAACvC,SAAb,CAAuB4I,uBAAvB,GAAiD,UAAUX,UAAV,EAAsB;IACnE,IAAI3F,QAAQ,GAAG,EAAf;IACA,KAAK0F,gCAAL,CAAsCC,UAAtC,EAAkD,UAAU5F,OAAV,EAAmB;MACjEC,QAAQ,CAACiE,IAAT,CAAclE,OAAd;IACH,CAFD;IAGA,OAAOC,QAAP;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,YAAY,CAACvC,SAAb,CAAuB6I,mBAAvB,GAA6C,UAAUzD,MAAV,EAAkB0D,cAAlB,EAAkC;IAC3E,IAAI1G,KAAK,GAAG,IAAZ;;IACA,IAAI,KAAK0B,cAAT,EAAyB;MACrB,IAAIiF,UAAU,GAAGD,cAAc,IAAIA,cAAc,CAACE,QAAf,EAAlB,IAA+C,KAAKC,QAAL,EAAhE;;MACA,IAAI,CAACF,UAAL,EAAiB;QACb,OAAO,KAAKjF,cAAL,CAAoBoF,WAApB,CAAgC9D,MAAhC,CAAP;MACH;;MACD,IAAIa,OAAO,GAAG1E,aAAa,CAAC6D,MAAD,EAAS0D,cAAT,CAA3B;MACA,OAAO,GAAGK,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBnD,OAAO,CAACoD,GAAR,CAAY,UAAUC,QAAV,EAAoB;QAAE,OAAOlH,KAAK,CAAC0B,cAAN,CAAqBoF,WAArB,CAAiCI,QAAjC,CAAP;MAAoD,CAAtF,CAApB,CAAP;IACH,CAPD,MAQK,IAAI,KAAKjF,mBAAT,EAA8B;MAC/B,OAAO,KAAKA,mBAAL,CAAyBG,QAAzB,GAAoCkE,KAApC,CAA0C,CAA1C,CAAP;IACH,CAFI,MAGA;MACD,OAAO,EAAP;IACH;EACJ,CAhBD;EAiBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACInG,YAAY,CAACvC,SAAb,CAAuBuJ,6BAAvB,GAAuD,UAAUtB,UAAV,EAAsBuB,UAAtB,EAAkC;IACrF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIC,CAAC,GAAGxB,UAAU,CAAC,CAAD,CAAlB;IACA,IAAIyB,CAAC,GAAGzB,UAAU,CAAC,CAAD,CAAlB;IACA,IAAI0B,cAAc,GAAG,IAArB;IACA,IAAIC,YAAY,GAAG,CAACC,GAAD,EAAMA,GAAN,CAAnB;IACA,IAAIC,kBAAkB,GAAGC,QAAzB;IACA,IAAI3E,MAAM,GAAG,CAAC,CAAC2E,QAAF,EAAY,CAACA,QAAb,EAAuBA,QAAvB,EAAiCA,QAAjC,CAAb;IACA,IAAIC,MAAM,GAAGR,UAAU,GAAGA,UAAH,GAAgBxI,IAAvC;IACA,KAAK8C,cAAL,CAAoBsE,eAApB,CAAoChD,MAApC;IACA;AACR;AACA;IACQ,UAAU/C,OAAV,EAAmB;MACf,IAAI2H,MAAM,CAAC3H,OAAD,CAAV,EAAqB;QACjB,IAAI6C,QAAQ,GAAG7C,OAAO,CAAC8C,WAAR,EAAf;QACA,IAAI8E,0BAA0B,GAAGH,kBAAjC;QACAA,kBAAkB,GAAG5E,QAAQ,CAACgF,cAAT,CAAwBT,CAAxB,EAA2BC,CAA3B,EAA8BE,YAA9B,EAA4CE,kBAA5C,CAArB;;QACA,IAAIA,kBAAkB,GAAGG,0BAAzB,EAAqD;UACjDN,cAAc,GAAGtH,OAAjB,CADiD,CAEjD;UACA;UACA;UACA;;UACA,IAAI8H,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUP,kBAAV,CAAlB;UACA1E,MAAM,CAAC,CAAD,CAAN,GAAYqE,CAAC,GAAGU,WAAhB;UACA/E,MAAM,CAAC,CAAD,CAAN,GAAYsE,CAAC,GAAGS,WAAhB;UACA/E,MAAM,CAAC,CAAD,CAAN,GAAYqE,CAAC,GAAGU,WAAhB;UACA/E,MAAM,CAAC,CAAD,CAAN,GAAYsE,CAAC,GAAGS,WAAhB;QACH;MACJ;IACJ,CAtBD;IAuBA,OAAOR,cAAP;EACH,CAvCD;EAwCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIpH,YAAY,CAACvC,SAAb,CAAuBqF,SAAvB,GAAmC,UAAUiF,UAAV,EAAsB;IACrD,OAAO,KAAKxG,cAAL,CAAoBuB,SAApB,CAA8BiF,UAA9B,CAAP;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI/H,YAAY,CAACvC,SAAb,CAAuBuK,cAAvB,GAAwC,UAAU1E,EAAV,EAAc;IAClD,IAAIxD,OAAO,GAAG,KAAK6B,QAAL,CAAc2B,EAAE,CAACE,QAAH,EAAd,CAAd;IACA,OAAO1D,OAAO,KAAKQ,SAAZ,GAAwBR,OAAxB,GAAkC,IAAzC;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIE,YAAY,CAACvC,SAAb,CAAuBwK,eAAvB,GAAyC,UAAUC,GAAV,EAAe;IACpD,IAAIpI,OAAO,GAAG,KAAK8B,SAAL,CAAesG,GAAf,CAAd;IACA,OAAOpI,OAAO,KAAKQ,SAAZ,GAAwBR,OAAxB,GAAkC,IAAzC;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIE,YAAY,CAACvC,SAAb,CAAuB0K,SAAvB,GAAmC,YAAY;IAC3C,OAAO,KAAKtH,OAAZ;EACH,CAFD;EAGA;AACJ;AACA;;;EACIb,YAAY,CAACvC,SAAb,CAAuB2K,WAAvB,GAAqC,YAAY;IAC7C,OAAO,KAAKrH,SAAZ;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;;;EACIf,YAAY,CAACvC,SAAb,CAAuB4K,MAAvB,GAAgC,YAAY;IACxC,OAAO,KAAKpH,IAAZ;EACH,CAFD;EAGA;AACJ;AACA;AACA;;;EACIjB,YAAY,CAACvC,SAAb,CAAuB0F,oBAAvB,GAA8C,UAAUmF,KAAV,EAAiB;IAC3D,IAAIxI,OAAO;IAAG;IAA0DwI,KAAK,CAACC,MAA9E;IACA,IAAIhG,UAAU,GAAGrD,MAAM,CAACY,OAAD,CAAvB;IACA,IAAI6C,QAAQ,GAAG7C,OAAO,CAAC8C,WAAR,EAAf;;IACA,IAAI,CAACD,QAAL,EAAe;MACX,IAAI,EAAEJ,UAAU,IAAI,KAAKb,qBAArB,CAAJ,EAAiD;QAC7C,IAAI,KAAKH,cAAT,EAAyB;UACrB,KAAKA,cAAL,CAAoBkB,MAApB,CAA2B3C,OAA3B;QACH;;QACD,KAAK4B,qBAAL,CAA2Ba,UAA3B,IAAyCzC,OAAzC;MACH;IACJ,CAPD,MAQK;MACD,IAAI+C,MAAM,GAAGF,QAAQ,CAACG,SAAT,EAAb;;MACA,IAAIP,UAAU,IAAI,KAAKb,qBAAvB,EAA8C;QAC1C,OAAO,KAAKA,qBAAL,CAA2Ba,UAA3B,CAAP;;QACA,IAAI,KAAKhB,cAAT,EAAyB;UACrB,KAAKA,cAAL,CAAoBwB,MAApB,CAA2BF,MAA3B,EAAmC/C,OAAnC;QACH;MACJ,CALD,MAMK;QACD,IAAI,KAAKyB,cAAT,EAAyB;UACrB,KAAKA,cAAL,CAAoBiH,MAApB,CAA2B3F,MAA3B,EAAmC/C,OAAnC;QACH;MACJ;IACJ;;IACD,IAAIwD,EAAE,GAAGxD,OAAO,CAACyD,KAAR,EAAT;;IACA,IAAID,EAAE,KAAKhD,SAAX,EAAsB;MAClB,IAAImI,GAAG,GAAGnF,EAAE,CAACE,QAAH,EAAV;;MACA,IAAI,KAAK7B,QAAL,CAAc8G,GAAd,MAAuB3I,OAA3B,EAAoC;QAChC,KAAK4I,kBAAL,CAAwB5I,OAAxB;QACA,KAAK6B,QAAL,CAAc8G,GAAd,IAAqB3I,OAArB;MACH;IACJ,CAND,MAOK;MACD,KAAK4I,kBAAL,CAAwB5I,OAAxB;MACA,KAAK8B,SAAL,CAAeW,UAAf,IAA6BzC,OAA7B;IACH;;IACD,KAAKwC,OAAL;IACA,KAAKU,aAAL,CAAmB,IAAIxD,iBAAJ,CAAsBhB,eAAe,CAACmK,aAAtC,EAAqD7I,OAArD,CAAnB;EACH,CAxCD;EAyCA;AACJ;AACA;AACA;AACA;AACA;;;EACIE,YAAY,CAACvC,SAAb,CAAuBmL,UAAvB,GAAoC,UAAU9I,OAAV,EAAmB;IACnD,IAAIwD,EAAE,GAAGxD,OAAO,CAACyD,KAAR,EAAT;;IACA,IAAID,EAAE,KAAKhD,SAAX,EAAsB;MAClB,OAAOgD,EAAE,IAAI,KAAK3B,QAAlB;IACH,CAFD,MAGK;MACD,OAAOzC,MAAM,CAACY,OAAD,CAAN,IAAmB,KAAK8B,SAA/B;IACH;EACJ,CARD;EASA;AACJ;AACA;;;EACI5B,YAAY,CAACvC,SAAb,CAAuB2B,OAAvB,GAAiC,YAAY;IACzC,IAAI,KAAKmC,cAAT,EAAyB;MACrB,OAAQ,KAAKA,cAAL,CAAoBnC,OAApB,MAAiCA,OAAO,CAAC,KAAKsC,qBAAN,CAAhD;IACH;;IACD,IAAI,KAAKI,mBAAT,EAA8B;MAC1B,OAAO,KAAKA,mBAAL,CAAyB+G,SAAzB,OAAyC,CAAhD;IACH;;IACD,OAAO,IAAP;EACH,CARD;EASA;AACJ;AACA;AACA;AACA;;;EACI7I,YAAY,CAACvC,SAAb,CAAuBqL,YAAvB,GAAsC,UAAUjG,MAAV,EAAkBkG,UAAlB,EAA8B1I,UAA9B,EAA0C;IAC5E,IAAI2I,kBAAkB,GAAG,KAAKxH,mBAA9B;IACA,IAAIyH,aAAa,GAAG,KAAK7H,SAAL,CAAeyB,MAAf,EAAuBkG,UAAvB,EAAmC1I,UAAnC,CAApB;;IACA,IAAI6I,OAAO,GAAG,UAAUrF,CAAV,EAAasF,EAAb,EAAiB;MAC3B,IAAIC,YAAY,GAAGH,aAAa,CAACpF,CAAD,CAAhC;MACA,IAAIwF,aAAa,GAAGL,kBAAkB,CAACnD,eAAnB,CAAmCuD,YAAnC;MACpB;AACZ;AACA;AACA;MACY,UAAUE,MAAV,EAAkB;QACd,OAAOxK,cAAc,CAACwK,MAAM,CAACzG,MAAR,EAAgBuG,YAAhB,CAArB;MACH,CAPmB,CAApB;;MAQA,IAAI,CAACC,aAAL,EAAoB;QAChB,EAAEE,MAAM,CAAC9H,oBAAT;QACA8H,MAAM,CAACvG,aAAP,CAAqB,IAAIxD,iBAAJ,CAAsBhB,eAAe,CAACgL,iBAAtC,CAArB;QACAD,MAAM,CAAC3I,OAAP,CAAejD,IAAf,CAAoB4L,MAApB,EAA4BH,YAA5B,EAA0CL,UAA1C,EAAsD1I,UAAtD,EAAkE,UAAUN,QAAV,EAAoB;UAClF,EAAE,KAAK0B,oBAAP;UACA,KAAKuB,aAAL,CAAmB,IAAIxD,iBAAJ,CAAsBhB,eAAe,CAACiL,eAAtC,EAAuDnJ,SAAvD,EAAkEP,QAAlE,CAAnB;QACH,CAHiE,CAGhE4E,IAHgE,CAG3D4E,MAH2D,CAAlE,EAGgB,YAAY;UACxB,EAAE,KAAK9H,oBAAP;UACA,KAAKuB,aAAL,CAAmB,IAAIxD,iBAAJ,CAAsBhB,eAAe,CAACkL,iBAAtC,CAAnB;QACH,CAHe,CAGd/E,IAHc,CAGT4E,MAHS,CAHhB;QAOAP,kBAAkB,CAACjG,MAAnB,CAA0BqG,YAA1B,EAAwC;UAAEvG,MAAM,EAAEuG,YAAY,CAACjD,KAAb;QAAV,CAAxC;MACH;IACJ,CAtBD;;IAuBA,IAAIoD,MAAM,GAAG,IAAb;;IACA,KAAK,IAAI1F,CAAC,GAAG,CAAR,EAAWsF,EAAE,GAAGF,aAAa,CAAClF,MAAnC,EAA2CF,CAAC,GAAGsF,EAA/C,EAAmD,EAAEtF,CAArD,EAAwD;MACpDqF,OAAO,CAACrF,CAAD,EAAIsF,EAAJ,CAAP;IACH;;IACD,KAAKQ,OAAL,GACI,KAAK/I,OAAL,CAAamD,MAAb,GAAsB,CAAtB,GAA0B,KAA1B,GAAkC,KAAKtC,oBAAL,GAA4B,CADlE;EAEH,CAhCD;;EAiCAzB,YAAY,CAACvC,SAAb,CAAuBmM,OAAvB,GAAiC,YAAY;IACzC,KAAK9E,KAAL,CAAW,IAAX;IACA,KAAKtD,mBAAL,CAAyBsD,KAAzB;;IACArF,MAAM,CAAChC,SAAP,CAAiBmM,OAAjB,CAAyBjM,IAAzB,CAA8B,IAA9B;EACH,CAJD;EAKA;AACJ;AACA;AACA;AACA;;;EACIqC,YAAY,CAACvC,SAAb,CAAuBoM,kBAAvB,GAA4C,UAAUhH,MAAV,EAAkB;IAC1D,IAAImG,kBAAkB,GAAG,KAAKxH,mBAA9B;IACA,IAAIsI,GAAJ;IACAd,kBAAkB,CAACnD,eAAnB,CAAmChD,MAAnC,EAA2C,UAAUyG,MAAV,EAAkB;MACzD,IAAIvK,MAAM,CAACuK,MAAM,CAACzG,MAAR,EAAgBA,MAAhB,CAAV,EAAmC;QAC/BiH,GAAG,GAAGR,MAAN;QACA,OAAO,IAAP;MACH;IACJ,CALD;;IAMA,IAAIQ,GAAJ,EAAS;MACLd,kBAAkB,CAACvG,MAAnB,CAA0BqH,GAA1B;IACH;EACJ,CAZD;EAaA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI9J,YAAY,CAACvC,SAAb,CAAuBoH,aAAvB,GAAuC,UAAU/E,OAAV,EAAmB;IACtD,IAAI,CAACA,OAAL,EAAc;MACV;IACH;;IACD,IAAIyC,UAAU,GAAGrD,MAAM,CAACY,OAAD,CAAvB;;IACA,IAAIyC,UAAU,IAAI,KAAKb,qBAAvB,EAA8C;MAC1C,OAAO,KAAKA,qBAAL,CAA2Ba,UAA3B,CAAP;IACH,CAFD,MAGK;MACD,IAAI,KAAKhB,cAAT,EAAyB;QACrB,KAAKA,cAAL,CAAoBkB,MAApB,CAA2B3C,OAA3B;MACH;IACJ;;IACD,IAAIkG,MAAM,GAAG,KAAKZ,qBAAL,CAA2BtF,OAA3B,CAAb;;IACA,IAAIkG,MAAJ,EAAY;MACR,KAAK1D,OAAL;IACH;EACJ,CAjBD;EAkBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACItC,YAAY,CAACvC,SAAb,CAAuB2H,qBAAvB,GAA+C,UAAUtF,OAAV,EAAmB;IAC9D,IAAIyC,UAAU,GAAGrD,MAAM,CAACY,OAAD,CAAvB;IACA,IAAIiK,iBAAiB,GAAG,KAAKlI,kBAAL,CAAwBU,UAAxB,CAAxB;;IACA,IAAI,CAACwH,iBAAL,EAAwB;MACpB;IACH;;IACDA,iBAAiB,CAAC7E,OAAlB,CAA0B5F,aAA1B;IACA,OAAO,KAAKuC,kBAAL,CAAwBU,UAAxB,CAAP;IACA,IAAIe,EAAE,GAAGxD,OAAO,CAACyD,KAAR,EAAT;;IACA,IAAID,EAAE,KAAKhD,SAAX,EAAsB;MAClB,OAAO,KAAKqB,QAAL,CAAc2B,EAAE,CAACE,QAAH,EAAd,CAAP;IACH;;IACD,OAAO,KAAK5B,SAAL,CAAeW,UAAf,CAAP;IACA,KAAKS,aAAL,CAAmB,IAAIxD,iBAAJ,CAAsBhB,eAAe,CAACgG,aAAtC,EAAqD1E,OAArD,CAAnB;IACA,OAAOA,OAAP;EACH,CAfD;EAgBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIE,YAAY,CAACvC,SAAb,CAAuBiL,kBAAvB,GAA4C,UAAU5I,OAAV,EAAmB;IAC3D,IAAIkK,OAAO,GAAG,KAAd;;IACA,KAAK,IAAI1G,EAAT,IAAe,KAAK3B,QAApB,EAA8B;MAC1B,IAAI,KAAKA,QAAL,CAAc2B,EAAd,MAAsBxD,OAA1B,EAAmC;QAC/B,OAAO,KAAK6B,QAAL,CAAc2B,EAAd,CAAP;QACA0G,OAAO,GAAG,IAAV;QACA;MACH;IACJ;;IACD,OAAOA,OAAP;EACH,CAVD;EAWA;AACJ;AACA;AACA;AACA;AACA;;;EACIhK,YAAY,CAACvC,SAAb,CAAuBwM,SAAvB,GAAmC,UAAU9I,MAAV,EAAkB;IACjD,KAAKP,OAAL,GAAeO,MAAf;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;;;EACInB,YAAY,CAACvC,SAAb,CAAuByM,MAAvB,GAAgC,UAAUhJ,GAAV,EAAe;IAC3CrC,MAAM,CAAC,KAAKgC,OAAN,EAAe,CAAf,CAAN,CAD2C,CAClB;;IACzB,KAAKI,IAAL,GAAYC,GAAZ;IACA,KAAK+I,SAAL,CAAe1K,GAAG,CAAC2B,GAAD,EAAM,KAAKL,OAAX,CAAlB;EACH,CAJD;;EAKA,OAAOb,YAAP;AACH,CAl1BiC,CAk1BhCzB,MAl1BgC,CAAlC;;AAm1BA,eAAeyB,YAAf"},"metadata":{},"sourceType":"module"}