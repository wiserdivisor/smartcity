{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/TextBuilder\n */\n\n\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\n\nexport var TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1\n};\n\nvar CanvasTextBuilder =\n/** @class */\nfunction (_super) {\n  __extends(CanvasTextBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n\n\n  function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n\n\n    _this.labels_ = null;\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n\n    _this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n\n    _this.textRotateWithView_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    _this.textFillState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n\n    _this.fillStates = {};\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    _this.textStrokeState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n\n    _this.strokeStates = {};\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n\n    _this.textState_ =\n    /** @type {import(\"../canvas.js\").TextState} */\n    {};\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n\n    _this.textStates = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.textKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.fillKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.strokeKey_ = '';\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n\n    _this.declutterImageWithText_ = undefined;\n    return _this;\n  }\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n\n\n  CanvasTextBuilder.prototype.finish = function () {\n    var instructions = _super.prototype.finish.call(this);\n\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  };\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n\n    if (this.text_ === '' || !textState || !fillState && !strokeState) {\n      return;\n    }\n\n    var coordinates = this.coordinates;\n    var begin = coordinates.length;\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var stride = geometry.getStride();\n\n    if (textState.placement === TextPlacement.LINE && (geometryType == 'LineString' || geometryType == 'MultiLineString' || geometryType == 'Polygon' || geometryType == 'MultiPolygon')) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n\n      var ends = void 0;\n      flatCoordinates = geometry.getFlatCoordinates();\n\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */\n        geometry.getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends =\n        /** @type {import(\"../../geom/Polygon.js\").default} */\n        geometry.getEnds().slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        var endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry.getEndss();\n        ends = [];\n\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign; // No `justify` support for line placement.\n\n      var flatOffset = 0;\n      var flatEnd = void 0;\n\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n\n        for (var i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n\n        var end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n\n      this.endGeometry(feature);\n    } else {\n      var geometryWidths = textState.overflow ? null : [];\n\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */\n          geometry.getFlatCoordinates();\n          break;\n\n        case 'LineString':\n          flatCoordinates =\n          /** @type {import(\"../../geom/LineString.js\").default} */\n          geometry.getFlatMidpoint();\n          break;\n\n        case 'Circle':\n          flatCoordinates =\n          /** @type {import(\"../../geom/Circle.js\").default} */\n          geometry.getCenter();\n          break;\n\n        case 'MultiLineString':\n          flatCoordinates =\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */\n          geometry.getFlatMidpoints();\n          stride = 2;\n          break;\n\n        case 'Polygon':\n          flatCoordinates =\n          /** @type {import(\"../../geom/Polygon.js\").default} */\n          geometry.getFlatInteriorPoint();\n\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n\n          stride = 3;\n          break;\n\n        case 'MultiPolygon':\n          var interiorPoints =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n          geometry.getFlatInteriorPoints();\n          flatCoordinates = [];\n\n          for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n\n          stride = 2;\n          break;\n\n        default:\n      }\n\n      var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n      if (end === begin) {\n        return;\n      }\n\n      if (geometryWidths && (end - begin) / 2 !== flatCoordinates.length / stride) {\n        var beg_1 = begin / 2;\n        geometryWidths = geometryWidths.filter(function (w, i) {\n          var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] && coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n\n          if (!keep) {\n            --beg_1;\n          }\n\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature); // adjust padding for negative scale\n\n      var padding = textState.padding;\n\n      if (padding != defaultPadding && (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n        var p0 = textState.padding[0];\n        var p1 = textState.padding[1];\n        var p2 = textState.padding[2];\n        var p3 = textState.padding[3];\n\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n\n        padding = [p0, p1, p2, p3];\n      } // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n\n\n      var pixelRatio_1 = this.pixelRatio;\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [1, 1], NaN, undefined, this.declutterImageWithText_, padding == defaultPadding ? defaultPadding : padding.map(function (p) {\n        return p * pixelRatio_1;\n      }), !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n      var scale = 1 / pixelRatio_1;\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [scale, scale], NaN, undefined, this.declutterImageWithText_, padding, !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n      this.endGeometry(feature);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  CanvasTextBuilder.prototype.saveTextStates_ = function () {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n    var strokeKey = this.strokeKey_;\n\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n\n    var textKey = this.textKey_;\n\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale\n      };\n    }\n\n    var fillKey = this.fillKey_;\n\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n\n\n  CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var strokeKey = this.strokeKey_;\n    var textKey = this.textKey_;\n    var fillKey = this.fillKey_;\n    this.saveTextStates_();\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var strokeWidth = strokeState ? strokeState.lineWidth * Math.abs(textState.scale[0]) / 2 : 0;\n    this.instructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, pixelRatio, offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, 1, offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio]);\n  };\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n\n\n  CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n    var textState, fillState, strokeState;\n\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n\n        if (!fillState) {\n          fillState =\n          /** @type {import(\"../canvas.js\").FillState} */\n          {};\n          this.textFillState_ = fillState;\n        }\n\n        fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n\n        if (!strokeState) {\n          strokeState =\n          /** @type {import(\"../canvas.js\").StrokeState} */\n          {};\n          this.textStrokeState_ = strokeState;\n        }\n\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset = lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth = lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit = miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      var textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n      this.strokeKey_ = strokeState ? (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) + strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth + strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' : '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?') + (textState.justify || '?') + (textState.textBaseline || '?');\n      this.fillKey_ = fillState ? typeof fillState.fillStyle == 'string' ? fillState.fillStyle : '|' + getUid(fillState.fillStyle) : '';\n    }\n\n    this.declutterImageWithText_ = opt_sharedData;\n  };\n\n  return CanvasTextBuilder;\n}(CanvasBuilder);\n\nexport default CanvasTextBuilder;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","CanvasBuilder","CanvasInstruction","TextPlacement","asColorLike","defaultFillStyle","defaultFont","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultPadding","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","registerFont","getUid","intersects","matchingChunk","TEXT_ALIGN","CanvasTextBuilder","_super","tolerance","maxExtent","resolution","pixelRatio","_this","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","undefined","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","declutterImageWithText_","finish","instructions","drawText","geometry","feature","fillState","strokeState","textState","coordinates","begin","length","geometryType","getType","flatCoordinates","stride","getStride","placement","LINE","getBufferedMaxExtent","getExtent","ends","getFlatCoordinates","getEnds","slice","endss","getEndss","i","ii","push","beginGeometry","textAlign","flatOffset","flatEnd","o","oo","range","maxAngle","end","drawChars_","endGeometry","geometryWidths","overflow","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","appendFlatPointCoordinates","beg_1","filter","w","keep","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","updateFillStyle","state","createFill","hitDetectionInstructions","updateStrokeStyle","applyStroke","createStroke","padding","scale","p0","p1","p2","p3","pixelRatio_1","DRAW_IMAGE","NaN","map","strokeKey","strokeStyle","lineCap","lineDashOffset","lineWidth","lineJoin","miterLimit","lineDash","textKey","font","justify","textBaseline","fillKey","fillStyle","baseline","offsetY","text","strokeWidth","Math","abs","DRAW_CHARS","setTextStyle","textStyle","opt_sharedData","textFillStyle","getFill","getColor","textStrokeStyle","getStroke","getLineDash","getLineDashOffset","getWidth","getMiterLimit","getLineCap","getLineJoin","getFont","textScale","getScaleArray","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","getRotateWithView","textRotation","getRotation","getText","join"],"sources":["/home/asura/github/smartcity/node_modules/ol/render/canvas/TextBuilder.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string|Array<string>}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == 'LineString' ||\n                geometryType == 'MultiLineString' ||\n                geometryType == 'Polygon' ||\n                geometryType == 'MultiPolygon')) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == 'LineString') {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == 'MultiLineString') {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == 'Polygon') {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == 'MultiPolygon') {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            // No `justify` support for line placement.\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case 'Point':\n                case 'MultiPoint':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case 'LineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case 'Circle':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case 'MultiLineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case 'Polygon':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case 'MultiPolygon':\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                justify: textState.justify,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.justify = textStyle.getJustify();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.justify || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}