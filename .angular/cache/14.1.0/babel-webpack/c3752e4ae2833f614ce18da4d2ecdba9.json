{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\n\n\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, { canvasPool } from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX } from '../../extent.js';\nimport { createCanvasContext2D, releaseCanvas } from '../../dom.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\n\nvar CanvasVectorLayerRenderer =\n/** @class */\nfunction (_super) {\n  __extends(CanvasVectorLayerRenderer, _super);\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n\n\n  function CanvasVectorLayerRenderer(vectorLayer) {\n    var _this = _super.call(this, vectorLayer) || this;\n    /** @private */\n\n\n    _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n    /**\n     * @type {boolean}\n     */\n\n    _this.animatingOrInteracting_;\n    /**\n     * @type {ImageData}\n     */\n\n    _this.hitDetectionImageData_ = null;\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n\n    _this.renderedFeatures_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.renderedRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.renderedResolution_ = NaN;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    _this.renderedExtent_ = createEmpty();\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    _this.wrappedRenderedExtent_ = createEmpty();\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.renderedRotation_;\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n\n    _this.renderedCenter_ = null;\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n\n    _this.renderedProjection_ = null;\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n\n    _this.renderedRenderOrder_ = null;\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n\n    _this.replayGroup_ = null;\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n\n    _this.replayGroupChanged = true;\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n\n    _this.declutterExecutorGroup = null;\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n\n    _this.clipping = true;\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    _this.compositionContext_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.opacity_ = 1;\n    return _this;\n  }\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n    var extent = frameState.extent;\n    var viewState = frameState.viewState;\n    var center = viewState.center;\n    var resolution = viewState.resolution;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = this.getLayer().getSource();\n    var pixelRatio = frameState.pixelRatio;\n    var viewHints = frameState.viewHints;\n    var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n    var context = this.compositionContext_;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    var endWorld = multiWorld ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1 : 1;\n    var world = multiWorld ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth) : 0;\n\n    do {\n      var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n      executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n    } while (++world < endWorld);\n  };\n\n  CanvasVectorLayerRenderer.prototype.setupCompositionContext_ = function () {\n    if (this.opacity_ !== 1) {\n      var compositionContext = createCanvasContext2D(this.context.canvas.width, this.context.canvas.height, canvasPool);\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  };\n\n  CanvasVectorLayerRenderer.prototype.releaseCompositionContext_ = function () {\n    if (this.opacity_ !== 1) {\n      var alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  };\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n      this.releaseCompositionContext_();\n    }\n  };\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n    var pixelRatio = frameState.pixelRatio;\n    var layerState = frameState.layerStatesArray[frameState.layerIndex]; // set forward and inverse pixel transforms\n\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n    var canvasTransform = transformToString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    var context = this.context;\n    var canvas = context.canvas;\n    var replayGroup = this.replayGroup_;\n    var declutterExecutorGroup = this.declutterExecutorGroup;\n\n    if ((!replayGroup || replayGroup.isEmpty()) && (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n      return null;\n    } // resize and clear\n\n\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_(); // clipped rendering if layer extent is set\n\n    var clipped = false;\n    var render = true;\n\n    if (layerState.extent && this.clipping) {\n      var layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n\n    return this.container;\n  };\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n    return new Promise(\n    /**\n     * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    function (resolve) {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        var size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        var center = this.renderedCenter_;\n        var resolution = this.renderedResolution_;\n        var rotation = this.renderedRotation_;\n        var projection = this.renderedProjection_;\n        var extent = this.wrappedRenderedExtent_;\n        var layer = this.getLayer();\n        var transforms = [];\n        var width = size[0] * HIT_DETECT_RESOLUTION;\n        var height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n        var source = layer.getSource();\n        var projectionExtent = projection.getExtent();\n\n        if (source.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n          var startX = extent[0];\n          var worldWidth = getWidth(projectionExtent);\n          var world = 0;\n          var offsetX = void 0;\n\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n            startX += worldWidth;\n          }\n\n          world = 0;\n          startX = extent[2];\n\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n      }\n\n      resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n    }.bind(this));\n  };\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n    var _this = this;\n\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var layer = this.getLayer();\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n\n    var features = {};\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n\n    var featureCallback = function (feature, geometry, distanceSq) {\n      var key = getUid(feature);\n      var match = features[key];\n\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n\n        matches.push(features[key] = {\n          feature: feature,\n          layer: layer,\n          geometry: geometry,\n          distanceSq: distanceSq,\n          callback: callback\n        });\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n\n      return undefined;\n    };\n\n    var result;\n    var executorGroups = [this.replayGroup_];\n\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n\n    executorGroups.some(function (executorGroup) {\n      return result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup && frameState.declutterTree ? frameState.declutterTree.all().map(function (item) {\n        return item.value;\n      }) : null);\n    });\n    return result;\n  };\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n    var layer = this.getLayer();\n\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n    this.renderIfReadyAndVisible();\n  };\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n    var vectorLayer = this.getLayer();\n    var vectorSource = vectorLayer.getSource();\n\n    if (!vectorSource) {\n      return false;\n    }\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (this.ready && !updateWhileAnimating && animating || !updateWhileInteracting && interacting) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n\n    this.animatingOrInteracting_ = false;\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var center = viewState.center.slice();\n    var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n    var renderedExtent = extent.slice();\n    var loadExtents = [extent.slice()];\n    var projectionExtent = projection.getExtent();\n\n    if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      var loadExtent = wrapExtentX(loadExtents[0], projection); // If the extent crosses the date line, we load data for both edges of the worlds\n\n      if (loadExtent[0] < projectionExtent[0] && loadExtent[2] < projectionExtent[2]) {\n        loadExtents.push([loadExtent[0] + worldWidth, loadExtent[1], loadExtent[2] + worldWidth, loadExtent[3]]);\n      } else if (loadExtent[0] > projectionExtent[0] && loadExtent[2] > projectionExtent[2]) {\n        loadExtents.push([loadExtent[0] - worldWidth, loadExtent[1], loadExtent[2] - worldWidth, loadExtent[3]]);\n      }\n    }\n\n    if (this.ready && this.renderedResolution_ == resolution && this.renderedRevision_ == vectorLayerRevision && this.renderedRenderOrder_ == vectorLayerRenderOrder && containsExtent(this.wrappedRenderedExtent_, extent)) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n    var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n    var declutterBuilderGroup;\n\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n    }\n\n    var userProjection = getUserProjection();\n    var userTransform;\n\n    if (userProjection) {\n      for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n        var extent_1 = loadExtents[i];\n        var userExtent_1 = toUserExtent(extent_1, projection);\n        vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n      }\n\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    var ready = true;\n\n    var render =\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    function (feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n\n      if (styles) {\n        var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n        ready = ready && !dirty;\n      }\n    }.bind(this);\n\n    var userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n\n    var features = vectorSource.getFeaturesInExtent(userExtent);\n\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n    var replayGroupInstructions = replayGroup.finish();\n    var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n    this.replayGroupChanged = true;\n    return true;\n  };\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n    if (!styles) {\n      return false;\n    }\n\n    var loading = false;\n\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n      }\n    } else {\n      loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n    }\n\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer);\n\nexport default CanvasVectorLayerRenderer;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","CanvasBuilderGroup","CanvasLayerRenderer","canvasPool","ExecutorGroup","ViewHint","HIT_DETECT_RESOLUTION","createHitDetectionImageData","hitDetect","apply","makeInverse","makeScale","toString","transformToString","buffer","containsExtent","createEmpty","getWidth","intersects","intersectsExtent","wrapX","wrapExtentX","createCanvasContext2D","releaseCanvas","defaultOrder","defaultRenderOrder","getTolerance","getRenderTolerance","getSquaredTolerance","getSquaredRenderTolerance","renderFeature","equals","fromUserExtent","getTransformFromProjections","getUserProjection","toUserExtent","toUserResolution","getUid","wrapCoordinateX","CanvasVectorLayerRenderer","_super","vectorLayer","_this","boundHandleStyleImageChange_","handleStyleImageChange_","bind","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","NaN","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","frameState","opt_declutterTree","extent","viewState","center","resolution","projection","rotation","projectionExtent","getExtent","vectorSource","getLayer","getSource","pixelRatio","viewHints","snapToPixel","ANIMATING","INTERACTING","context","width","Math","round","size","height","multiWorld","getWrapX","canWrapX","worldWidth","endWorld","ceil","world","floor","transform","getRenderTransform","execute","undefined","setupCompositionContext_","compositionContext","canvas","releaseCompositionContext_","alpha","globalAlpha","drawImage","push","renderDeclutter","declutterTree","renderFrame","target","layerState","layerStatesArray","layerIndex","pixelTransform","inversePixelTransform","canvasTransform","useContainer","getBackground","replayGroup","isEmpty","style","containerReused","clearRect","preRender","opacity","clipped","render","layerExtent","clipUnrotated","restore","postRender","container","getFeatures","pixel","Promise","resolve","layer","transforms","slice","source","startX","offsetX","getStyleFunction","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","matches","features","featureCallback","feature","geometry","distanceSq","key","match","splice","lastIndexOf","result","executorGroups","some","all","map","item","value","handleFontsChanged","getVisible","changed","event","renderIfReadyAndVisible","prepareFrame","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","ready","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","renderedExtent","loadExtents","gutter","max","loadExtent","declutterBuilderGroup","getDeclutter","userProjection","userTransform","i","ii","length","extent_1","userExtent_1","loadFeatures","squaredTolerance","styles","styleFunction","dirty","userExtent","getFeaturesInExtent","sort","replayGroupInstructions","finish","getOverlaps","builderGroup","opt_transform","opt_declutterBuilderGroup","loading","isArray"],"sources":["/home/asura/github/smartcity/node_modules/ol/renderer/canvas/VectorLayer.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, { canvasPool } from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createCanvasContext2D, releaseCanvas } from '../../dom.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.compositionContext_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.opacity_ = 1;\n        return _this;\n    }\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.compositionContext_;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    CanvasVectorLayerRenderer.prototype.setupCompositionContext_ = function () {\n        if (this.opacity_ !== 1) {\n            var compositionContext = createCanvasContext2D(this.context.canvas.width, this.context.canvas.height, canvasPool);\n            this.compositionContext_ = compositionContext;\n        }\n        else {\n            this.compositionContext_ = this.context;\n        }\n    };\n    CanvasVectorLayerRenderer.prototype.releaseCompositionContext_ = function () {\n        if (this.opacity_ !== 1) {\n            var alpha = this.context.globalAlpha;\n            this.context.globalAlpha = this.opacity_;\n            this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n            this.context.globalAlpha = alpha;\n            releaseCanvas(this.compositionContext_);\n            canvasPool.push(this.compositionContext_.canvas);\n            this.compositionContext_ = null;\n        }\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.setupCompositionContext_();\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n            this.releaseCompositionContext_();\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            return null;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        this.opacity_ = layerState.opacity;\n        this.setupCompositionContext_();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            this.compositionContext_.restore();\n        }\n        this.releaseCompositionContext_();\n        this.postRender(context, frameState);\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup &&\n                frameState.declutterTree\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((this.ready && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (this.ready &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                var extent_1 = loadExtents[i];\n                var userExtent_1 = toUserExtent(extent_1, projection);\n                vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var ready = true;\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                ready = ready && !dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        this.ready = ready;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}