{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Image\n */\n\n\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nvar ImageWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ImageWrapper, _super);\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n\n\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n    var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n\n\n    _this.src_ = src;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n\n    _this.image_ = new Image();\n\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n\n    _this.unlisten_ = null;\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n\n    _this.state = ImageState.IDLE;\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n\n    _this.imageLoadFunction_ = imageLoadFunction;\n    return _this;\n  }\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n\n\n  ImageWrapper.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.handleImageError_ = function () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.handleImageLoad_ = function () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n\n\n  ImageWrapper.prototype.load = function () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n\n\n  ImageWrapper.prototype.setImage = function (image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n\n  return ImageWrapper;\n}(ImageBase);\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\n\n\nexport function listenImage(image, loadHandler, errorHandler) {\n  var img =\n  /** @type {HTMLImageElement} */\n  image;\n  var listening = true;\n  var decoding = false;\n  var loaded = false;\n  var listenerKeys = [listenOnce(img, EventType.LOAD, function () {\n    loaded = true;\n\n    if (!decoding) {\n      loadHandler();\n    }\n  })];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img.decode().then(function () {\n      if (listening) {\n        loadHandler();\n      }\n    }).catch(function (error) {\n      if (listening) {\n        if (loaded) {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\nexport default ImageWrapper;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","EventType","ImageBase","ImageState","IMAGE_DECODE","getHeight","listenOnce","unlistenByKey","ImageWrapper","_super","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","_this","IDLE","src_","image_","Image","unlisten_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","height","LOADED","load","LOADING","listenImage","bind","setImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","decode","then","catch","error","push","unlisten","forEach"],"sources":["/home/asura/github/smartcity/node_modules/ol/Image.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n        this.resolution = getHeight(this.extent) / this.image_.height;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    var listening = true;\n    var decoding = false;\n    var loaded = false;\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, function () {\n            loaded = true;\n            if (!decoding) {\n                loadHandler();\n            }\n        }),\n    ];\n    if (img.src && IMAGE_DECODE) {\n        decoding = true;\n        img\n            .decode()\n            .then(function () {\n            if (listening) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening) {\n                if (loaded) {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n    }\n    else {\n        listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n    }\n    return function unlisten() {\n        listening = false;\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}