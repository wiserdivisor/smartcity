{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/Attribution\n */\n\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='â€º'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\n\nvar Attribution =\n/** @class */\nfunction (_super) {\n  __extends(Attribution, _super);\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n\n\n  function Attribution(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n\n    _this.ulElement_ = document.createElement('ul');\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.userCollapsed_ = _this.collapsed_;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.overrideCollapsible_ = options.collapsible !== undefined;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.collapsible_ = options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!_this.collapsible_) {\n      _this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n    var expandClassName = options.expandClassName !== undefined ? options.expandClassName : className + '-expand';\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n    var collapseClassName = options.collapseClassName !== undefined ? options.collapseClassName : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.collapseLabel_ = document.createElement('span');\n      _this.collapseLabel_.textContent = collapseLabel;\n      _this.collapseLabel_.className = collapseClassName;\n    } else {\n      _this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.label_ = document.createElement('span');\n      _this.label_.textContent = label;\n      _this.label_.className = expandClassName;\n    } else {\n      _this.label_ = label;\n    }\n\n    var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n\n    _this.toggleButton_ = document.createElement('button');\n\n    _this.toggleButton_.setAttribute('type', 'button');\n\n    _this.toggleButton_.setAttribute('aria-expanded', String(!_this.collapsed_));\n\n    _this.toggleButton_.title = tipLabel;\n\n    _this.toggleButton_.appendChild(activeLabel);\n\n    _this.toggleButton_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL + (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') + (_this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(_this.toggleButton_);\n    element.appendChild(_this.ulElement_);\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n\n    _this.renderedAttributions_ = [];\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.renderedVisible_ = true;\n    return _this;\n  }\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n\n\n  Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n\n    var visibleAttributions = [];\n    var collapsible = true;\n    var layerStatesArray = frameState.layerStatesArray;\n\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      var source =\n      /** @type {import(\"../layer/Layer.js\").default} */\n      layerState.layer.getSource();\n\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible = collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n\n    return visibleAttributions;\n  };\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n\n  Attribution.prototype.updateElement_ = function (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n    var visible = attributions.length > 0;\n\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_); // append the attributions\n\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n\n  Attribution.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  };\n  /**\n   * @private\n   */\n\n\n  Attribution.prototype.handleToggle_ = function () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  };\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n\n\n  Attribution.prototype.getCollapsible = function () {\n    return this.collapsible_;\n  };\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n\n\n  Attribution.prototype.setCollapsible = function (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  };\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n\n\n  Attribution.prototype.setCollapsed = function (collapsed) {\n    this.userCollapsed_ = collapsed;\n\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n\n    this.handleToggle_();\n  };\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n\n\n  Attribution.prototype.getCollapsed = function () {\n    return this.collapsed_;\n  };\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n\n\n  Attribution.prototype.render = function (mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  };\n\n  return Attribution;\n}(Control);\n\nexport default Attribution;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Control","EventType","CLASS_COLLAPSED","CLASS_CONTROL","CLASS_UNSELECTABLE","equals","inView","removeChildren","replaceNode","Attribution","_super","opt_options","_this","options","element","document","createElement","render","target","ulElement_","collapsed_","collapsed","undefined","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","appendChild","addEventListener","CLICK","handleClick_","bind","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","frameState","lookup","visibleAttributions","layerStatesArray","i","ii","length","layerState","viewState","source","layer","getSource","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","isArray","j","jj","push","setCollapsible","updateElement_","style","display","visible","innerHTML","event","preventDefault","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent"],"sources":["/home/asura/github/smartcity/node_modules/ol/control/Attribution.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='â€º'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options} [opt_options] Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collapse';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.toggleButton_ = document.createElement('button');\n        _this.toggleButton_.setAttribute('type', 'button');\n        _this.toggleButton_.setAttribute('aria-expanded', String(!_this.collapsed_));\n        _this.toggleButton_.title = tipLabel;\n        _this.toggleButton_.appendChild(activeLabel);\n        _this.toggleButton_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.toggleButton_);\n        element.appendChild(_this.ulElement_);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}