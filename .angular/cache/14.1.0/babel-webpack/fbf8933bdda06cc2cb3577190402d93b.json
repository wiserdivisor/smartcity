{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/ScaleLine\n */\n\n\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\n/**\n * @type {string}\n */\n\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\n\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n/**\n * @const\n * @type {Array<number>}\n */\n\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\n\nvar DEFAULT_DPI = 25.4 / 0.28;\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\n\nvar ScaleLine =\n/** @class */\nfunction (_super) {\n  __extends(ScaleLine, _super);\n  /**\n   * @param {Options} [opt_options] Scale line options.\n   */\n\n\n  function ScaleLine(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var className = options.className !== undefined ? options.className : options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n\n    _this.innerElement_ = document.createElement('div');\n    _this.innerElement_.className = className + '-inner';\n    _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n\n    _this.element.appendChild(_this.innerElement_);\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n\n\n    _this.viewState_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    _this.maxWidth_ = options.maxWidth;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.renderedVisible_ = false;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    _this.renderedWidth_ = undefined;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.renderedHTML_ = '';\n\n    _this.addChangeListener(UNITS_PROP, _this.handleUnitsChanged_);\n\n    _this.setUnits(options.units || Units.METRIC);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n\n    _this.scaleBar_ = options.bar || false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.scaleBarSteps_ = options.steps || 4;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.scaleBarText_ = options.text || false;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    _this.dpi_ = options.dpi || undefined;\n    return _this;\n  }\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n\n\n  ScaleLine.prototype.getUnits = function () {\n    return this.get(UNITS_PROP);\n  };\n  /**\n   * @private\n   */\n\n\n  ScaleLine.prototype.handleUnitsChanged_ = function () {\n    this.updateElement_();\n  };\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n\n\n  ScaleLine.prototype.setUnits = function (units) {\n    this.set(UNITS_PROP, units);\n  };\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n\n\n  ScaleLine.prototype.setDpi = function (dpi) {\n    this.dpi_ = dpi;\n  };\n  /**\n   * @private\n   */\n\n\n  ScaleLine.prototype.updateElement_ = function () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    var minWidth = this.minWidth_ * (this.dpi_ || DEFAULT_DPI) / DEFAULT_DPI;\n    var maxWidth = this.maxWidth_ !== undefined ? this.maxWidth_ * (this.dpi_ || DEFAULT_DPI) / DEFAULT_DPI : undefined;\n    var nominalCount = minWidth * pointResolution;\n    var suffix = '';\n\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'Î¼m';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    var count, width, decimalCount;\n    var previousCount, previousWidth, previousDecimalCount;\n\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      var decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[(i % 3 + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n\n    var html;\n\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  };\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n\n\n  ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n    var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    var scaleSteps = [];\n    var stepWidth = width / this.scaleBarSteps_;\n    var backgroundColor = 'ol-scale-singlebar-odd';\n\n    for (var i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n\n      scaleSteps.push('<div>' + '<div ' + 'class=\"ol-scale-singlebar ' + backgroundColor + '\" ' + 'style=' + '\"width: ' + stepWidth + 'px;\"' + '>' + '</div>' + this.createMarker('relative', i) + (\n      /*render text every second step, except when only 2 steps */\n      i % 2 === 0 || this.scaleBarSteps_ === 2 ? this.createStepText(i, width, false, scale, suffix) : '') + '</div>');\n\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      } // switch style of steps\n\n\n      backgroundColor = backgroundColor === 'ol-scale-singlebar-odd' ? 'ol-scale-singlebar-even' : 'ol-scale-singlebar-odd';\n    }\n\n    var scaleBarText;\n\n    if (this.scaleBarText_) {\n      scaleBarText = '<div ' + 'class=\"ol-scale-text\" ' + 'style=\"width: ' + width + 'px;\">' + mapScale + '</div>';\n    } else {\n      scaleBarText = '';\n    }\n\n    var container = '<div ' + 'style=\"display: flex;\">' + scaleBarText + scaleSteps.join('') + '</div>';\n    return container;\n  };\n  /**\n   * Creates a marker at given position\n   * @param {string} position The position, absolute or relative\n   * @param {number} i The iterator\n   * @return {string} The stringified div containing the marker\n   */\n\n\n  ScaleLine.prototype.createMarker = function (position, i) {\n    var top = position === 'absolute' ? 3 : -10;\n    return '<div ' + 'class=\"ol-scale-step-marker\" ' + 'style=\"position: ' + position + ';' + 'top: ' + top + 'px;\"' + '></div>';\n  };\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n\n\n  ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n    var length = i === 0 ? 0 : Math.round(scale / this.scaleBarSteps_ * i * 100) / 100;\n    var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n    var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n    return '<div ' + 'class=\"ol-scale-step-text\" ' + 'style=\"' + 'margin-left: ' + margin + 'px;' + 'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' + 'min-width: ' + minWidth + 'px;' + 'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' + '>' + lengthString + '</div>';\n  };\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n\n\n  ScaleLine.prototype.getScaleForResolution = function () {\n    var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center, ProjUnits.METERS);\n    var dpi = this.dpi_ || DEFAULT_DPI;\n    var inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * inchesPerMeter * dpi;\n  };\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n\n\n  ScaleLine.prototype.render = function (mapEvent) {\n    var frameState = mapEvent.frameState;\n\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n\n    this.updateElement_();\n  };\n\n  return ScaleLine;\n}(Control);\n\nexport default ScaleLine;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Control","ProjUnits","CLASS_UNSELECTABLE","METERS_PER_UNIT","getPointResolution","assert","UNITS_PROP","Units","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","_super","opt_options","_this","options","className","undefined","bar","element","document","createElement","render","target","on","once","un","innerElement_","appendChild","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedVisible_","renderedWidth_","renderedHTML_","addChangeListener","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","getUnits","get","updateElement_","set","setDpi","viewState","style","display","center","projection","pointResolutionUnits","METERS","pointResolution","resolution","nominalCount","suffix","metersPerDegree","i","Math","floor","log","count","width","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","pow","round","isNaN","html","createScaleBar","toFixed","innerHTML","scale","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","push","createMarker","createStepText","scaleBarText","container","join","position","top","isLast","length","lengthString","margin","inchesPerMeter","parseFloat","toString","mapEvent","frameState"],"sources":["/home/asura/github/smartcity/node_modules/ol/control/ScaleLine.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us',\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options} [opt_options] Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined\n            ? options.className\n            : options.bar\n                ? 'ol-scale-bar'\n                : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /***\n         * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ScaleLineOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.maxWidth_ = options.maxWidth;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        _this.addChangeListener(UNITS_PROP, _this.handleUnitsChanged_);\n        _this.setUnits(options.units || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.dpi_ = options.dpi || undefined;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {import(\"./ScaleLine.js\").Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n    ScaleLine.prototype.setDpi = function (dpi) {\n        this.dpi_ = dpi;\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n        var maxWidth = this.maxWidth_ !== undefined\n            ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n            : undefined;\n        var nominalCount = minWidth * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'NM';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'Î¼m';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        var previousCount, previousWidth, previousDecimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            if (maxWidth !== undefined && width >= maxWidth) {\n                count = previousCount;\n                width = previousWidth;\n                decimalCount = previousDecimalCount;\n                break;\n            }\n            else if (width >= minWidth) {\n                break;\n            }\n            previousCount = count;\n            previousWidth = width;\n            previousDecimalCount = decimalCount;\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @return {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = 'ol-scale-singlebar-odd';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar ' +\n                backgroundColor +\n                '\" ' +\n                'style=' +\n                '\"width: ' +\n                stepWidth +\n                'px;\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2\n                    ? this.createStepText(i, width, false, scale, suffix)\n                    : '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                {\n                    /*render text at the end */\n                }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch style of steps\n            backgroundColor =\n                backgroundColor === 'ol-scale-singlebar-odd'\n                    ? 'ol-scale-singlebar-even'\n                    : 'ol-scale-singlebar-odd';\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText =\n                '<div ' +\n                    'class=\"ol-scale-text\" ' +\n                    'style=\"width: ' +\n                    width +\n                    'px;\">' +\n                    mapScale +\n                    '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position The position, absolute or relative\n     * @param {number} i The iterator\n     * @return {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return ('<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' +\n            position +\n            ';' +\n            'top: ' +\n            top +\n            'px;\"' +\n            '></div>');\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i The iterator\n     * @param {number} width The width the scalebar will currently use\n     * @param {boolean} isLast Flag indicating if we add the last step text\n     * @param {number} scale The current scale for the whole scalebar\n     * @param {string} suffix The suffix for the scale\n     * @return {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n        return ('<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' +\n            margin +\n            'px;' +\n            'text-align: ' +\n            (i === 0 ? 'left' : 'center') +\n            '; ' +\n            'min-width: ' +\n            minWidth +\n            'px;' +\n            'left: ' +\n            (isLast ? width + 'px' : 'unset') +\n            ';\"' +\n            '>' +\n            lengthString +\n            '</div>');\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center, ProjUnits.METERS);\n        var dpi = this.dpi_ || DEFAULT_DPI;\n        var inchesPerMeter = 1000 / 25.4;\n        return parseFloat(resolution.toString()) * inchesPerMeter * dpi;\n    };\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ScaleLine.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.viewState_ = null;\n        }\n        else {\n            this.viewState_ = frameState.viewState;\n        }\n        this.updateElement_();\n    };\n    return ScaleLine;\n}(Control));\nexport default ScaleLine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}