{"ast":null,"code":"import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\n\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  var canvas;\n\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n\n  if (opt_height) {\n    canvas.height = opt_height;\n  } //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n\n\n  return (\n    /** @type {CanvasRenderingContext2D} */\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\n\nexport function releaseCanvas(context) {\n  var canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\n\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n  return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\n\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n  return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\n\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\n\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\n\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\n\nexport function replaceChildren(node, children) {\n  var oldChildren = node.childNodes;\n\n  for (var i = 0; true; ++i) {\n    var oldChild = oldChildren[i];\n    var newChild = children[i]; // check if our work is done\n\n    if (!oldChild && !newChild) {\n      break;\n    } // check if children match\n\n\n    if (oldChild === newChild) {\n      continue;\n    } // check if a new child needs to be added\n\n\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    } // check if an old child needs to be removed\n\n\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    } // reorder\n\n\n    node.insertBefore(newChild, oldChild);\n  }\n}","map":{"version":3,"names":["WORKER_OFFSCREEN_CANVAS","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","length","shift","OffscreenCanvas","document","createElement","width","height","getContext","releaseCanvas","context","clearRect","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","i","oldChild","newChild","appendChild","insertBefore"],"sources":["/home/asura/github/smartcity/source/node_modules/ol/dom.js"],"sourcesContent":["import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n    /** @type {HTMLCanvasElement|OffscreenCanvas} */\n    var canvas;\n    if (opt_canvasPool && opt_canvasPool.length) {\n        canvas = opt_canvasPool.shift();\n    }\n    else if (WORKER_OFFSCREEN_CANVAS) {\n        canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n    }\n    else {\n        canvas = document.createElement('canvas');\n    }\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d', opt_Context2DSettings));\n}\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n    var canvas = context.canvas;\n    canvas.width = 1;\n    canvas.height = 1;\n    context.clearRect(0, 0, 1, 1);\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}