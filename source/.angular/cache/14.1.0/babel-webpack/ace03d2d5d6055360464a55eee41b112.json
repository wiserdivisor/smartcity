{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\n\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\n\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\n\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\n\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\n\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\n\nexport var labelCache = new EventTarget();\n\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\n\n\nvar measureContext = null;\n/**\n * @type {string}\n */\n\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\n\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n\nexport var registerFont = function () {\n  var retries = 100;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    var available = true;\n\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n\n      if (fontFamily != referenceFont) {\n        var width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text); // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n\n        available = available && width != referenceWidth;\n      }\n    }\n\n    if (available) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    var fonts = checkedFonts.getKeys();\n\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights); // Make sure that loaded fonts are picked up by Safari\n\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    var font = getFontParameters(fontSpec);\n\n    if (!font) {\n      return;\n    }\n\n    var families = font.families;\n\n    for (var i = 0, ii = families.length; i < ii; ++i) {\n      var family = families[i];\n      var key = font.style + '\\n' + font.weight + '\\n' + family;\n\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\n\nexport var measureTextHeight = function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  var measureElement;\n  return function (fontSpec) {\n    var height = textHeights[fontSpec];\n\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        var font = getFontParameters(fontSpec);\n        var metrics = measureText(fontSpec, 'Å½g');\n        var lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n        height = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n\n      textHeights[fontSpec] = height;\n    }\n\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\n\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n\n  return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n\n\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\n\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n\n  var width = text.split('\\n').reduce(function (prev, curr) {\n    return Math.max(prev, measureTextWidth(font, curr));\n  }, 0);\n  cache[text] = width;\n  return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\n\nexport function getTextDimensions(baseStyle, chunks) {\n  var widths = [];\n  var heights = [];\n  var lineWidths = [];\n  var width = 0;\n  var lineWidth = 0;\n  var height = 0;\n  var lineHeight = 0;\n\n  for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n    var text = chunks[i];\n\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n\n    var font = chunks[i + 1] || baseStyle.font;\n    var currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    var currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n\n  return {\n    width: width,\n    height: height,\n    widths: widths,\n    heights: heights,\n    lineWidths: lineWidths\n  };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\n\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (\n  /** @type {*} */\n  labelOrImage.contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(\n    /** @type {Label} */\n    labelOrImage, context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n    /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */\n    labelOrImage, originX, originY, w, h, 0, 0, w, h);\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n    /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */\n    labelOrImage, originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n  }\n\n  context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\n\nfunction executeLabelInstructions(label, context) {\n  var contextInstructions = label.contextInstructions;\n\n  for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}","map":{"version":3,"names":["BaseObject","EventTarget","WORKER_OFFSCREEN_CANVAS","clear","createCanvasContext2D","getFontParameters","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","setSize","console","warn","measureContext","measureFont","textHeights","registerFont","retries","size","referenceFonts","len","length","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","i","referenceFont","measureTextWidth","width","check","done","fonts","getKeys","ii","font","get","apply","split","undefined","set","clearInterval","fontSpec","families","family","key","style","weight","setInterval","measureTextHeight","measureElement","height","metrics","measureText","lineHeight","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","document","createElement","innerHTML","minHeight","maxHeight","padding","border","position","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","cache","reduce","prev","curr","Math","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","push","currentWidth","currentHeight","rotateAtOffset","context","rotation","offsetX","offsetY","translate","rotate","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","Array","isArray"],"sources":["/home/asura/github/smartcity/source/node_modules/ol/render/canvas.js"],"sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Å½g');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = text\n        .split('\\n')\n        .reduce(function (prev, curr) { return Math.max(prev, measureTextWidth(font, curr)); }, 0);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n    var widths = [];\n    var heights = [];\n    var lineWidths = [];\n    var width = 0;\n    var lineWidth = 0;\n    var height = 0;\n    var lineHeight = 0;\n    for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n        var text = chunks[i];\n        if (text === '\\n' || i === ii) {\n            width = Math.max(width, lineWidth);\n            lineWidths.push(lineWidth);\n            lineWidth = 0;\n            height += lineHeight;\n            continue;\n        }\n        var font = chunks[i + 1] || baseStyle.font;\n        var currentWidth = measureTextWidth(font, text);\n        widths.push(currentWidth);\n        lineWidth += currentWidth;\n        var currentHeight = measureTextHeight(font);\n        heights.push(currentHeight);\n        lineHeight = Math.max(lineHeight, currentHeight);\n    }\n    return { width: width, height: height, widths: widths, heights: heights, lineWidths: lineWidths };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,uBAAT,QAAwC,WAAxC;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,qBAAT,QAAsC,WAAtC;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,WAAW,GAAG,iBAAlB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,gBAAgB,GAAG,MAAvB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,cAAc,GAAG,OAArB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,eAAe,GAAG,EAAtB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,qBAAqB,GAAG,CAA5B;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,eAAe,GAAG,OAAtB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,iBAAiB,GAAG,EAAxB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,kBAAkB,GAAG,MAAzB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,gBAAgB,GAAG,QAAvB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,mBAAmB,GAAG,QAA1B;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;AACP;AACA;AACA;AACA;;AAC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"},"metadata":{},"sourceType":"module"}