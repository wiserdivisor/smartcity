{"ast":null,"code":"/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\n\nvar ImageStyle =\n/** @class */\nfunction () {\n  /**\n   * @param {Options} options Options.\n   */\n  function ImageStyle(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.rotateWithView_ = options.rotateWithView;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.rotation_ = options.rotation;\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n\n    this.scale_ = options.scale;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    this.scaleArray_ = toSize(options.scale);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.displacement_ = options.displacement;\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n\n    this.declutterMode_ = options.declutterMode;\n  }\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n\n\n  ImageStyle.prototype.clone = function () {\n    var scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode()\n    });\n  };\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n\n\n  ImageStyle.prototype.getOpacity = function () {\n    return this.opacity_;\n  };\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n\n\n  ImageStyle.prototype.getRotateWithView = function () {\n    return this.rotateWithView_;\n  };\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n\n\n  ImageStyle.prototype.getRotation = function () {\n    return this.rotation_;\n  };\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n\n\n  ImageStyle.prototype.getScale = function () {\n    return this.scale_;\n  };\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n\n\n  ImageStyle.prototype.getScaleArray = function () {\n    return this.scaleArray_;\n  };\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n\n\n  ImageStyle.prototype.getDisplacement = function () {\n    return this.displacement_;\n  };\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n\n\n  ImageStyle.prototype.getDeclutterMode = function () {\n    return this.declutterMode_;\n  };\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n\n\n  ImageStyle.prototype.getAnchor = function () {\n    return abstract();\n  };\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n\n\n  ImageStyle.prototype.getImage = function (pixelRatio) {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n\n\n  ImageStyle.prototype.getHitDetectionImage = function () {\n    return abstract();\n  };\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n\n\n  ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n    return 1;\n  };\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  ImageStyle.prototype.getImageState = function () {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  ImageStyle.prototype.getImageSize = function () {\n    return abstract();\n  };\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n\n\n  ImageStyle.prototype.getOrigin = function () {\n    return abstract();\n  };\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n\n\n  ImageStyle.prototype.getSize = function () {\n    return abstract();\n  };\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n\n\n  ImageStyle.prototype.setDisplacement = function (displacement) {\n    this.displacement_ = displacement;\n  };\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n\n\n  ImageStyle.prototype.setOpacity = function (opacity) {\n    this.opacity_ = opacity;\n  };\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n\n\n  ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  };\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n\n\n  ImageStyle.prototype.setRotation = function (rotation) {\n    this.rotation_ = rotation;\n  };\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n\n\n  ImageStyle.prototype.setScale = function (scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  };\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  ImageStyle.prototype.listenImageChange = function (listener) {\n    abstract();\n  };\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n\n\n  ImageStyle.prototype.load = function () {\n    abstract();\n  };\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  ImageStyle.prototype.unlistenImageChange = function (listener) {\n    abstract();\n  };\n\n  return ImageStyle;\n}();\n\nexport default ImageStyle;","map":{"version":3,"names":["abstract","toSize","ImageStyle","options","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scale","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","prototype","clone","getScale","getOpacity","Array","isArray","slice","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","listener","load","unlistenImageChange"],"sources":["/home/asura/github/smartcity/source/node_modules/ol/style/Image.js"],"sourcesContent":["/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n        /**\n         * @private\n         * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n         */\n        this.declutterMode_ = options.declutterMode;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the declutter mode of the shape\n     * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n     * @api\n     */\n    ImageStyle.prototype.getDeclutterMode = function () {\n        return this.declutterMode_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the displacement.\n     *\n     * @param {Array<number>} displacement Displacement.\n     * @api\n     */\n    ImageStyle.prototype.setDisplacement = function (displacement) {\n        this.displacement_ = displacement;\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}